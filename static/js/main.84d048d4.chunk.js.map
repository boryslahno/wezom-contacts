{"version":3,"sources":["store/auth/types.js","store/auth/authReducer.js","store/contacts/types.js","store/contacts/contactsReducer.js","store/filter/types.js","store/filter/filterReducer.js","store/middleware.js","store/rootReducer.js","store/index.js","assets/images/react-logo.svg","assets/images/wezom-logo.svg","components/app/logo/view.jsx","components/app/navbar/view.jsx","constants/nationalities.js","utils/getBirthday.js","utils/getDayOfWeek.js","utils/convertTime.js","utils/modifyDataForView.js","utils/getFullName.js","utils/getResidence.js","utils/getNationalities.js","store/auth/auth.js","components/app/modal/view.jsx","utils/passwordValidate.js","components/app/dropdownMenu/view.jsx","components/app/dropdown/view.jsx","components/app/header/view.jsx","components/app/infoLine/view.jsx","store/filter/filter.js","components/app/filterForm/view.jsx","utils/filterContacts.js","components/app/statistic/view.jsx","utils/getGendersCount.js","utils/determineTheMajority.js","utils/getNumberOfNationalities.js","store/contacts/contacts.js","utils/random.js","components/app/table/columnsConfiguration.js","components/app/table/view.jsx","components/app/profileInfo/view.jsx","components/app/list/view.jsx","components/app/contactsControl/View.jsx","routes/routes.js","pages/home/view.jsx","pages/profile/view.jsx","pages/contacts/view.jsx","pages/contactsView/view.jsx","pages/notFound/view.jsx","assets/images/backdrop.jpg","layout/base/style.js","layout/base/view.jsx","layout/base/hooks/useLayout.js","routes/switch/view.jsx","index.js"],"names":["types","Object","freeze","AUTH_START_FETCHING","AUTH_STOP_FETCHING","AUTH_OPEN_MODAL","AUTH_CLOSE_MODAL","AUTH_FETCH_DATA","AUTH_SET_AUTHORIZED","intitialState","isModalOpen","personalInformation","isLoading","isAuthorized","CONTACTS_FETCH_CONTACTS","CONTACTS_START_FETCHING","CONTACTS_STOP_FETCHING","CONTACTS_ERROR_FETCHING","CONTACTS_SET_TABLE_CURRENT_PAGE","CONTACTS_SET_TABLE_PAGE_SIZE","CONTACTS_SET_TILED_CURRENT_PAGE","CONTACTS_SET_TILED_PAGE_SIZE","CONTACTS_SET_SORT_ORDER","initialState","contacts","tableCurrentPage","tablePageSize","tiledCurrentPage","tiledPageSize","sortOrder","FILTER_SET_CONTACTS","FILTER_SET_SEARCH_TERM","FILTER_SET_GENDER","FILTER_SET_NATIONALITY","FILTER_SET_ISCREATOR","FILTER_CLEAR","filteredContacts","searchTerm","gender","nationality","isCreator","clear","history","createLogger","duration","collapsed","colors","title","action","error","prevState","nextState","createBrowserHistory","basename","myRouterMiddleware","routerMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","rootReducer","combineReducers","router","connectRouter","auth","state","type","payload","filter","store","createStore","applyMiddleware","View","React","memo","to","exact","className","activeclassname","src","WezomLogo","alt","isAuth","useSelector","publicRoutes","useMemo","name","key","privateRoutes","map","route","routes","path","NATIONALITIES","AU","color","BR","CA","CH","DE","DK","ES","FI","FR","GB","IE","IR","NO","NL","NZ","TR","US","getBirthDay","date","birthDate","match","time","split","year","months","day","dayOfWeek","Date","getDay","convertedTime","timeArray","join","convertTime","modifyDataForView","contact","index","location","postcode","toString","avatar","url","picture","large","userId","fullName","first","last","birthday","fullFormat","dob","age","email","phone","country","address","street","number","city","abbreviation","nat","tagColor","authActions","startFetching","stopFetching","openModal","closeModal","setAuthorized","fetchPersonalData","seedKey","dispatch","a","fetch","response","json","personalData","results","notification","message","useHistory","useDispatch","hideModal","visible","centered","closable","onCancel","footer","onFinish","formData","localStorage","setItem","JSON","stringify","profileSeedKey","push","Item","rules","required","hasFeedback","placeholder","size","prefix","UserOutlined","validator","_","password","test","Promise","reject","Error","length","resolve","passwordValidate","Password","LockOutlined","flex","htmlType","icon","CloseOutlined","danger","onClick","Divider","removeItem","success","LogoutOutlined","overlay","indicator","LoadingOutlined","spin","align","gutter","Text","DownOutlined","LoginOutlined","children","information","wrap","copyable","text","style","filterActions","setFilteredContacts","setSearchTerm","setGender","setNationality","setIsCreator","setClear","isClear","nationalities","values","Option","value","useEffect","resultFilterContacts","filterNationalities","filterGender","isFullName","toLowerCase","includes","isGender","isNationality","filterContacts","justify","xs","lg","Search","onChange","event","target","sm","mode","maxTagCount","checked","disabled","gendersCount","reduce","genderCounts","male","female","indeterminate","getGendersCount","genderMajority","maxGenderCount","Math","max","determineTheMajority","numberOfNationalities","numberNationalities","countryName","replaceAll","getNumberOfNationalities","Title","level","loading","span","mark","formatter","column","md","xl","keys","label","labelStyle","contactsActions","setTableCurrentPage","currentPage","setTablePageSize","pageSize","setTiledCurrentPage","setTiledPageSize","setSortOrder","order","fetchContacts","min","contactsCount","floor","random","contactsModified","description","columnsConfiguration","dataIndex","render","fixed","width","sorter","firstContact","secondContact","localeCompare","defaultSortOrder","href","ellipsis","dataSource","columns","scroll","x","pagination","defaultPageSize","defaultCurrent","page","sort","profileData","dashed","grid","xxl","header","renderItem","hoverable","cover","Meta","pageSizeOptions","reloadData","setViewMode","viewMode","tableViewButtonType","tiledViewButtonType","changeViewMode","currentTarget","shape","ReloadOutlined","AppstoreOutlined","UnorderedListOutlined","ReactLogo","getItem","useState","getViewMode","id","useParams","DoubleLeftOutlined","pageNotFound","content","backgroundImage","backdrop","currentYear","getFullYear","user","parse","checkAuthorization","useCallback","addEventListener","removeEventListener","useLayout","Header","Content","Footer","Page","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.84d048d4.chunk.js","sourcesContent":["\r\nexport const types = Object.freeze({\r\n   AUTH_START_FETCHING: 'AUTH_START_FETCHING',\r\n   AUTH_STOP_FETCHING: 'AUTH_STOP_FETCHING',\r\n   AUTH_OPEN_MODAL: 'AUTH_OPEN_MODAL',\r\n   AUTH_CLOSE_MODAL: 'AUTH_CLOSE_MODAL',\r\n   AUTH_FETCH_DATA: 'AUTH_FETCH_DATA',\r\n   AUTH_SET_AUTHORIZED: 'AUTH_SET_AUTHORIZED',\r\n});","import { types } from './types';\r\n\r\nconst intitialState = {\r\n   isModalOpen: false,\r\n   personalInformation: {},\r\n   isLoading: true,\r\n   isAuthorized: false,\r\n}\r\n\r\nconst authReducer = (state = intitialState, action) => {\r\n   switch (action.type) {\r\n      case types.AUTH_OPEN_MODAL:\r\n         return { ...state, isModalOpen: true }\r\n      case types.AUTH_CLOSE_MODAL:\r\n         return { ...state, isModalOpen: false }\r\n      case types.AUTH_SET_AUTHORIZED:\r\n         return { ...state, isAuthorized: action.payload }\r\n      case types.AUTH_FETCH_DATA:\r\n         return { ...state, personalInformation: action.payload }\r\n      case types.AUTH_START_FETCHING:\r\n         return { ...state, isLoading: true }\r\n      case types.AUTH_STOP_FETCHING:\r\n         return { ...state, isLoading: false }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport { authReducer };","\r\nexport const types = Object.freeze({\r\n   CONTACTS_FETCH_CONTACTS: 'CONTACTS_FETCH_CONTACTS',\r\n   CONTACTS_START_FETCHING: 'CONTACTS_START_FETCHING',\r\n   CONTACTS_STOP_FETCHING: 'CONTACTS_STOP_FETCHING',\r\n   CONTACTS_ERROR_FETCHING: 'CONTACTS_ERROR_FETCHING',\r\n   CONTACTS_SET_TABLE_CURRENT_PAGE: 'CONTACTS_SET_TABLE_CURRENT_PAGE',\r\n   CONTACTS_SET_TABLE_PAGE_SIZE: 'CONTACTS_SET_TABLE_PAGE_SIZE',\r\n   CONTACTS_SET_TILED_CURRENT_PAGE: 'CONTACTS_SET_TILED_CURRENT_PAGE',\r\n   CONTACTS_SET_TILED_PAGE_SIZE: 'CONTACTS_SET_TILED_PAGE_SIZE',\r\n   CONTACTS_SET_SORT_ORDER: 'CONTACTS_SET_SORT_ORDER',\r\n})","import { types } from './types';\r\n\r\nconst initialState = {\r\n   contacts: [],\r\n   isLoading: true,\r\n   tableCurrentPage: 1,\r\n   tablePageSize: 10,\r\n   tiledCurrentPage: 1,\r\n   tiledPageSize: 6,\r\n   sortOrder: '',\r\n}\r\n\r\nconst contactsReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.CONTACTS_FETCH_CONTACTS:\r\n         return { ...state, contacts: action.payload }\r\n      case types.CONTACTS_START_FETCHING:\r\n         return { ...state, isLoading: true }\r\n      case types.CONTACTS_STOP_FETCHING:\r\n         return { ...state, isLoading: false }\r\n      case types.CONTACTS_SET_TABLE_CURRENT_PAGE:\r\n         return { ...state, tableCurrentPage: action.payload }\r\n      case types.CONTACTS_SET_TABLE_PAGE_SIZE:\r\n         return { ...state, tablePageSize: action.payload }\r\n      case types.CONTACTS_SET_TILED_CURRENT_PAGE:\r\n         return { ...state, tiledCurrentPage: action.payload }\r\n      case types.CONTACTS_SET_TILED_PAGE_SIZE:\r\n         return { ...state, tiledPageSize: action.payload }\r\n      case types.CONTACTS_SET_SORT_ORDER:\r\n         return { ...state, sortOrder: action.payload }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport { contactsReducer };","\r\nexport const types = Object.freeze({\r\n   FILTER_SET_CONTACTS: 'FILTER_SET_CONTACTS',\r\n   FILTER_SET_SEARCH_TERM: 'FILTER_SET_SEARCH_TERM',\r\n   FILTER_SET_GENDER: 'FILTER_SET_GENDER',\r\n   FILTER_SET_NATIONALITY: 'FILTER_SET_NATIONALITY',\r\n   FILTER_SET_ISCREATOR: 'FILTER_SET_ISCREATOR',\r\n   FILTER_CLEAR: 'FILTER_CLEAR',\r\n})","import { types } from \"./types\";\r\n\r\nconst initialState = {\r\n   filteredContacts: [],\r\n   searchTerm: '',\r\n   gender: null,\r\n   nationality: [],\r\n   isCreator: false,\r\n   clear: true,\r\n}\r\n\r\nexport const filterReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.FILTER_SET_CONTACTS:\r\n         return { ...state, filteredContacts: action.payload };\r\n      case types.FILTER_SET_SEARCH_TERM:\r\n         return { ...state, searchTerm: action.payload }\r\n      case types.FILTER_SET_GENDER:\r\n         return { ...state, gender: action.payload }\r\n      case types.FILTER_SET_NATIONALITY:\r\n         return { ...state, nationality: action.payload }\r\n      case types.FILTER_SET_ISCREATOR:\r\n         return { ...state, isCreator: action.payload }\r\n      case types.FILTER_CLEAR:\r\n         return { ...state, clear: action.payload }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { routerMiddleware } from \"connected-react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { compose } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const logger = createLogger({\r\n   duration: true,\r\n   collapsed: true,\r\n   colors: {\r\n      title: (action) => {\r\n         return action.error ? \"firebrick\" : \"deepskyblue\";\r\n      },\r\n      prevState: () => \"#1C5FAF\",\r\n      action: () => \"#149945\",\r\n      nextState: () => \"#A47104\",\r\n      error: () => \"#ff0005\",\r\n   },\r\n});\r\n\r\nconst history = createBrowserHistory({\r\n   basename: '/wezom-contacts/'\r\n});\r\n\r\nconst myRouterMiddleware = routerMiddleware(history);\r\n\r\nconst developmentEnvironment = process.env.NODE_ENV === \"development\";\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\r\n\r\nconst middleware = [thunk, myRouterMiddleware];\r\n\r\nif (developmentEnvironment) {\r\n   middleware.push(logger);\r\n}\r\n\r\nexport { composeEnhancers, middleware, history };","import { combineReducers } from 'redux'\r\nimport { authReducer } from './auth/authReducer';\r\nimport { contactsReducer } from './contacts/contactsReducer';\r\nimport { filterReducer } from './filter/filterReducer';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { history } from './middleware';\r\n\r\nexport const rootReducer = combineReducers({\r\n   router: connectRouter(history),\r\n   auth: authReducer,\r\n   contacts: contactsReducer,\r\n   filter: filterReducer,\r\n});","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from \"./rootReducer\";\r\nimport { middleware, composeEnhancers } from './middleware';\r\n\r\n\r\nconst store = createStore(\r\n   rootReducer,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport { store };\r\n","export default __webpack_public_path__ + \"static/media/react-logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/wezom-logo.e70df2c4.svg\";","import React from \"react\";\r\nimport WezomLogo from '../../../assets/images/wezom-logo.svg';\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst View = React.memo(() => {\r\n\r\n   return (\r\n      <NavLink to='/' exact className='logo' activeclassname='active'>\r\n         <img src={WezomLogo} alt='Wezom' className='logo__img' />\r\n      </NavLink>\r\n   );\r\n});\r\n\r\nexport { View };","import React, { useMemo } from \"react\";\r\nimport './style.scss';\r\nimport { routes } from '../../../routes/routes';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst View = () => {\r\n\r\n   const isAuth = useSelector(state => state.auth.isAuthorized);\r\n\r\n   const publicRoutes = useMemo(() => [\r\n      { name: 'Home', key: 'home' },\r\n   ], [])\r\n\r\n   const privateRoutes = useMemo(() => [\r\n      { name: 'Home', key: 'home' },\r\n      { name: 'Contacts', key: 'contacts' }\r\n   ], [])\r\n\r\n   return (\r\n      <div className='navbar'>\r\n         <ul className='navbar__list'>\r\n            {isAuth ?\r\n               privateRoutes.map(route =>\r\n                  <li key={route.key} className='navbar__item'>\r\n                     <NavLink\r\n                        to={routes[route.key].path}\r\n                        className='navbar__link'\r\n                        activeclassname='active'\r\n                        exact>\r\n                        {route.name}\r\n                     </NavLink>\r\n                  </li>\r\n               )\r\n               :\r\n               publicRoutes.map(route =>\r\n                  <li key={route.key} className='navbar__item'>\r\n                     <NavLink\r\n                        to={routes[route.key].path}\r\n                        className='navbar__link'\r\n                        activeclassname='active'\r\n                        exact>\r\n                        {route.name}\r\n                     </NavLink>\r\n                  </li>\r\n               )\r\n            }\r\n         </ul>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const NATIONALITIES = {\r\n   AU: { name: 'Australian', color: 'magenta' },\r\n   BR: { name: 'Brazilian', color: 'red' },\r\n   CA: { name: 'Canadian', color: 'volcano' },\r\n   CH: { name: 'Swiss', color: 'orange' },\r\n   DE: { name: 'German', color: 'gold' },\r\n   DK: { name: 'Danish', color: 'lime' },\r\n   ES: { name: 'Spanish', color: 'green' },\r\n   FI: { name: 'Finnish', color: 'cyan' },\r\n   FR: { name: 'French', color: 'blue' },\r\n   GB: { name: 'British', color: 'geekblue' },\r\n   IE: { name: 'Irish', color: 'purple' },\r\n   IR: { name: 'Iranian', color: '#f50' },\r\n   NO: { name: 'Norwegian', color: '#2db7f5' },\r\n   NL: { name: 'Dutch', color: '#87d068' },\r\n   NZ: { name: 'New Zealander', color: '#9e1068' },\r\n   TR: { name: 'Turkish', color: '#ffd666' },\r\n   US: { name: 'American' },\r\n};","import { getDayOfWeek } from './getDayOfWeek';\r\nimport { convertTime } from './convertTime';\r\n\r\nexport const getBirthDay = date => {\r\n\r\n   const birthDate = date.match(/\\d+-\\d+-\\d+/g)[0];\r\n   const time = date.match(/\\d+:\\d+:\\d+/g)[0];\r\n\r\n   const [year, months, day] = birthDate.split('-');\r\n   const dayOfWeek = getDayOfWeek(new Date(birthDate).getDay())\r\n\r\n   const convertedTime = convertTime(time.split(':'));\r\n\r\n   return `${dayOfWeek}, ${+months}/${+day}/${year}, ${convertedTime}`;\r\n}","\r\nexport const getDayOfWeek = numberOfTheDay => {\r\n   const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\n   return days[numberOfTheDay - 1];\r\n}","\r\nexport const convertTime = timeArray => {\r\n   const convertedTime = timeArray;\r\n\r\n   if (convertedTime[0] >= 0 && convertedTime[0] < 12) {\r\n\r\n      convertedTime[0] = +convertedTime[0];\r\n\r\n      return `${convertedTime.join(':')} AM`;\r\n   }\r\n\r\n   convertedTime[0] = +convertedTime[0] - 12;\r\n\r\n   return `${convertedTime.join(':')} PM`;\r\n}","import { getFullName } from './getFullName';\r\nimport { getResidence } from './getResidence';\r\nimport { getNationality } from './getNationalities';\r\nimport { getBirthDay } from './getBirthday';\r\n\r\nconst modifyDataForView = contacts =>\r\n   contacts.map((contact, index) => {\r\n      return {\r\n         key: contact.location.postcode.toString() + index,\r\n         avatar: { url: contact.picture.large, userId: index + 1 },\r\n         fullName: { fullName: getFullName(contact.name), userId: index + 1 },\r\n         birthday: { fullFormat: getBirthDay(contact.dob.date), age: `${contact.dob.age} years` },\r\n         email: contact.email,\r\n         phone: contact.phone,\r\n         location: getResidence(contact.location),\r\n         nationality: getNationality(contact.nat),\r\n         gender: contact.gender,\r\n      }\r\n   })\r\n\r\nexport { modifyDataForView };","\r\nexport const getFullName = (name) =>\r\n   `${name.title}. ${name.first} ${name.last}`","\r\nexport const getResidence = location =>\r\n({\r\n   country: `/${location.country}/`,\r\n   address: `${location.street.number} ${location.street.name}, ${location.city}, ${location.state} ${location.postcode}`\r\n})","import { NATIONALITIES } from '../constants/nationalities';\r\n\r\nexport const getNationality = abbreviation =>\r\n({\r\n   name: NATIONALITIES[abbreviation].name,\r\n   tagColor: NATIONALITIES[abbreviation].color,\r\n})","import { notification } from 'antd';\r\nimport { modifyDataForView } from '../../utils/modifyDataForView';\r\nimport { types } from './types';\r\n\r\nexport const authActions = Object.freeze({\r\n   startFetching() {\r\n      return {\r\n         type: types.AUTH_START_FETCHING\r\n      }\r\n   },\r\n   stopFetching() {\r\n      return {\r\n         type: types.AUTH_STOP_FETCHING\r\n      }\r\n   },\r\n   openModal() {\r\n      return {\r\n         type: types.AUTH_OPEN_MODAL\r\n      }\r\n   },\r\n   closeModal() {\r\n      return {\r\n         type: types.AUTH_CLOSE_MODAL\r\n      }\r\n   },\r\n   setAuthorized(isAuth) {\r\n      return {\r\n         type: types.AUTH_SET_AUTHORIZED,\r\n         payload: isAuth,\r\n      }\r\n   },\r\n   //Async\r\n   fetchPersonalData: (seedKey) => async dispatch => {\r\n      dispatch(authActions.startFetching());\r\n      try {\r\n         const response = await fetch(`https://randomuser.me/api/?seed=${seedKey}`);\r\n         const personalData = await response.json()\r\n         dispatch({ type: types.AUTH_FETCH_DATA, payload: modifyDataForView(personalData.results)[0] });\r\n      } catch (error) {\r\n         notification.error({\r\n            message: error.message,\r\n            title: 'Please, tyr again later',\r\n         })\r\n      } finally {\r\n         dispatch(authActions.stopFetching());\r\n      }\r\n\r\n   }\r\n})","import React from \"react\";\r\nimport { Modal, Button, Form, Input, Row, Col } from 'antd';\r\nimport { CloseOutlined, UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authActions } from '../../../store/auth/auth';\r\nimport { passwordValidate } from '../../../utils/passwordValidate';\r\n\r\nconst View = () => {\r\n\r\n   const history = useHistory();\r\n   const dispatch = useDispatch();\r\n   const isModalOpen = useSelector(state => state.auth.isModalOpen);\r\n\r\n   const hideModal = () => dispatch(authActions.closeModal());\r\n\r\n   const handleSubmit = formData => {\r\n      localStorage.setItem('auth', JSON.stringify({ profileSeedKey: formData.email }));\r\n      dispatch(authActions.setAuthorized(true));\r\n      dispatch(authActions.closeModal());\r\n      dispatch(authActions.fetchPersonalData(formData.email));\r\n      history.push('/profile');\r\n   }\r\n\r\n   return (\r\n      <Modal\r\n         title='Sign In'\r\n         visible={isModalOpen}\r\n         centered={true}\r\n         closable={false}\r\n         onCancel={hideModal}\r\n         footer={null}\r\n      >\r\n         <Form onFinish={handleSubmit}>\r\n            <Form.Item name='email'\r\n               rules={[\r\n                  { type: 'email', message: 'The email format is invalid.' },\r\n                  { required: true, message: 'The email field is required.' }\r\n               ]}\r\n               hasFeedback\r\n            >\r\n               <Input placeholder='Email' size='large' prefix={<UserOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item name='password'\r\n               rules={[\r\n                  { required: true, message: 'The password field is required.' },\r\n                  { validator: (_, password) => passwordValidate(password), }\r\n               ]}\r\n               hasFeedback\r\n            >\r\n               <Input.Password\r\n                  placeholder='Password'\r\n                  size='large'\r\n                  prefix={<LockOutlined />}\r\n\r\n               />\r\n            </Form.Item>\r\n            <Form.Item className='_m-none'>\r\n               <Row>\r\n                  <Col flex=\"1 1 auto\">\r\n                     <Button\r\n                        type=\"primary\"\r\n                        htmlType='submit'\r\n                        size='large'\r\n                        className='_full_width'\r\n                     > Sign in</Button>\r\n                  </Col>\r\n                  <Col>\r\n                     <Button\r\n                        type='link'\r\n                        htmlType='button'\r\n                        icon={<CloseOutlined />}\r\n                        danger\r\n                        onClick={hideModal}\r\n                     >Cancel</Button>\r\n                  </Col>\r\n               </Row>\r\n            </Form.Item>\r\n         </Form>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const passwordValidate = password => {\r\n   if (/[^\\w.-]/gi.test(password)) {\r\n      return Promise.reject(new Error('The password format is invalid.'));\r\n   }\r\n   if (password && password.length < 8) {\r\n      return Promise.reject(new Error('The password must be at least 8 characters.'));\r\n   }\r\n   return Promise.resolve();\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authActions } from '../../../store/auth/auth';\r\nimport { Menu, notification } from 'antd';\r\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport './style.scss';\r\n\r\nconst View = () => {\r\n\r\n   const history = useHistory();\r\n   const dispatch = useDispatch();\r\n\r\n   const handleLogOut = () => {\r\n      localStorage.removeItem('auth');\r\n      dispatch(authActions.setAuthorized(false));\r\n      history.push('/');\r\n      notification.success({\r\n         message: 'Successfully logged out'\r\n      })\r\n   }\r\n\r\n   const handleGoToProfile = () => {\r\n      history.push('/profile');\r\n   }\r\n\r\n   return (\r\n      <Menu className='menu'>\r\n         <Menu.Item key='profile' onClick={handleGoToProfile}>\r\n            <UserOutlined className='menu__icon' />\r\n            Profile\r\n         </Menu.Item>\r\n         <Menu.Divider className='_m-none' />\r\n         <Menu.Item key='logout' onClick={handleLogOut}>\r\n            <LogoutOutlined className='menu__icon' />\r\n            Logout\r\n         </Menu.Item>\r\n      </Menu>\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Dropdown, Spin, Row, Col, Typography, Avatar } from 'antd';\r\nimport { LoadingOutlined, DownOutlined } from '@ant-design/icons';\r\nimport { Menu } from '../dropdownMenu';\r\nimport './style.scss';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst View = () => {\r\n\r\n   const isLoading = useSelector(state => state.auth.isLoading);\r\n   const { fullName, avatar } = useSelector(state => state.auth.personalInformation)\r\n\r\n   return (\r\n      <Dropdown overlay={<Menu />} className='dropdown'>\r\n         {isLoading\r\n            ?\r\n            <Spin indicator={<LoadingOutlined spin className='dropdown__spin' />} />\r\n            :\r\n            <Row align='middle' gutter={8} className='_cursor_pointer'>\r\n               <Col>\r\n                  <Typography.Text type='secondary' className='dropdown__title'>\r\n                     Hello! {fullName.fullName} <DownOutlined />\r\n                  </Typography.Text>\r\n               </Col>\r\n               <Col>\r\n                  <Avatar src={avatar.url} size={48} />\r\n               </Col>\r\n            </Row>\r\n         }\r\n      </Dropdown>\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Logo } from '../logo';\r\nimport { Row, Col, Button } from 'antd';\r\nimport { LoginOutlined } from '@ant-design/icons';\r\nimport { NavBar } from '../navbar';\r\nimport { Modal } from '../modal';\r\nimport './style.scss';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authActions } from '../../../store/auth/auth';\r\nimport { DropDown } from '../dropdown';\r\n\r\nconst View = () => {\r\n\r\n   const dispatch = useDispatch();\r\n   const { isAuthorized } = useSelector(state => state.auth);\r\n\r\n   const showModal = () => dispatch(authActions.openModal());\r\n\r\n   return (\r\n      <div className='header'>\r\n         <Modal />\r\n         <Row align='middle'>\r\n            <Col className='header__logo'>\r\n               <Logo />\r\n            </Col>\r\n            <Col className='_flex-grow'>\r\n               <Row align='middle'>\r\n                  <Col className='_flex-grow'>\r\n                     <NavBar />\r\n                  </Col>\r\n                  <Col>\r\n                     {isAuthorized ?\r\n                        <DropDown />\r\n                        :\r\n                        <Button\r\n                           type='link'\r\n                           htmlType='button'\r\n                           icon={<LoginOutlined />}\r\n                           onClick={showModal}\r\n                        >\r\n                           Sign In\r\n                        </Button>}\r\n                  </Col>\r\n               </Row>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Typography, Row, Col } from 'antd';\r\n\r\nconst View = ({ children, information, className }) => {\r\n\r\n   return (\r\n      <Row gutter={10} wrap={false} className={className}>\r\n         <Col>\r\n            <Typography.Text copyable={{ text: information }} style={{ 'marginLeft': '-10px' }} />\r\n         </Col>\r\n         <Col>\r\n            {children}\r\n         </Col>\r\n      </Row>\r\n   );\r\n}\r\n\r\nexport { View };","import { types } from \"./types\"\r\n\r\n\r\nexport const filterActions = Object.freeze({\r\n   setFilteredContacts(contacts) {\r\n      return {\r\n         type: types.FILTER_SET_CONTACTS,\r\n         payload: contacts\r\n      }\r\n   },\r\n   setSearchTerm(searchTerm) {\r\n      return {\r\n         type: types.FILTER_SET_SEARCH_TERM,\r\n         payload: searchTerm\r\n      }\r\n   },\r\n   setGender(gender) {\r\n      return {\r\n         type: types.FILTER_SET_GENDER,\r\n         payload: gender\r\n      }\r\n   },\r\n   setNationality(nationality) {\r\n      return {\r\n         type: types.FILTER_SET_NATIONALITY,\r\n         payload: nationality\r\n      }\r\n   },\r\n   setIsCreator(isCreator) {\r\n      return {\r\n         type: types.FILTER_SET_ISCREATOR,\r\n         payload: isCreator\r\n      }\r\n   },\r\n   setClear(isClear) {\r\n      return {\r\n         type: types.FILTER_CLEAR,\r\n         payload: isClear\r\n      }\r\n   }\r\n});","import React, { useEffect, useMemo } from \"react\";\r\nimport { Form, Row, Col, Input, Select, Checkbox, Button } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { NATIONALITIES } from '../../../constants/nationalities';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterActions } from \"../../../store/filter/filter\";\r\nimport { filterContacts } from '../../../utils/filterContacts';\r\n\r\nconst View = () => {\r\n\r\n   const nationalities = useMemo(() =>\r\n      Object.values(NATIONALITIES).map(({ name }) =>\r\n         <Select.Option key={name} value={name}>\r\n            {name}\r\n         </Select.Option>\r\n      ), []);\r\n\r\n   const contacts = useSelector(state => state.contacts.contacts);\r\n   const {\r\n      searchTerm,\r\n      gender,\r\n      nationality,\r\n      isCreator,\r\n      clear,\r\n   } = useSelector(state => state.filter);\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      const resultFilterContacts = filterContacts(contacts, searchTerm, gender, nationality, isCreator);\r\n      dispatch(filterActions.setFilteredContacts(resultFilterContacts))\r\n   }, [dispatch, searchTerm, gender, nationality, isCreator, clear, contacts])\r\n\r\n   const handleSearchTermChange = event => {\r\n      dispatch(filterActions.setSearchTerm(event.target.value));\r\n      dispatch(filterActions.setClear(false))\r\n   }\r\n\r\n   const handleChangeCreator = event => {\r\n      dispatch(filterActions.setIsCreator(event.target.checked));\r\n      dispatch(filterActions.setClear(false))\r\n   }\r\n\r\n   const handleChangeGender = gender => {\r\n      dispatch(filterActions.setGender(gender));\r\n      dispatch(filterActions.setClear(false))\r\n   }\r\n\r\n   const handelChangeNationality = nationalities => {\r\n      dispatch(filterActions.setNationality(nationalities))\r\n      dispatch(filterActions.setClear(false))\r\n   }\r\n\r\n   const handleChangeClear = () => {\r\n      dispatch(filterActions.setClear(true));\r\n      dispatch(filterActions.setSearchTerm(''));\r\n      dispatch(filterActions.setIsCreator(false));\r\n      dispatch(filterActions.setGender(null));\r\n      dispatch(filterActions.setNationality([]))\r\n   }\r\n\r\n   return (\r\n      <Form>\r\n         <div className='box'>\r\n            <Row gutter={[12, 12]} align='middle' justify='center'>\r\n               <Col className='_flex-grow'>\r\n                  <Row gutter={[12, 12]} align='middle' justify='center'>\r\n                     <Col xs={24} lg={11}>\r\n                        <Input.Search\r\n                           placeholder='Search by full name'\r\n                           size='large'\r\n                           value={searchTerm}\r\n                           onChange={handleSearchTermChange}\r\n                        />\r\n                     </Col>\r\n                     <Col xs={24} sm={10} lg={4}>\r\n                        <Select\r\n                           placeholder='Gender'\r\n                           size='large'\r\n                           className='_full_width'\r\n                           value={gender}\r\n                           onChange={handleChangeGender}\r\n                        >\r\n                           <Select.Option value='male'>\r\n                              Male\r\n                           </Select.Option>\r\n                           <Select.Option value='female'>\r\n                              Female\r\n                           </Select.Option>\r\n                           <Select.Option value='ideterminate'>\r\n                              Ideterminate\r\n                           </Select.Option>\r\n                        </Select>\r\n                     </Col>\r\n                     <Col xs={24} sm={14} lg={5}>\r\n                        <Select\r\n                           placeholder='Nationality'\r\n                           size='large'\r\n                           mode='multiple'\r\n                           maxTagCount={2}\r\n                           className='_full_width'\r\n                           value={nationality}\r\n                           onChange={handelChangeNationality}\r\n                        >\r\n                           {nationalities}\r\n                        </Select>\r\n                     </Col>\r\n                     <Col xs={24} sm={6} lg={4}>\r\n                        <Checkbox checked={isCreator} onChange={handleChangeCreator}>\r\n                           I am creator\r\n                        </Checkbox>\r\n                     </Col>\r\n                  </Row>\r\n               </Col>\r\n               <Col className='_flex-noshrink'>\r\n                  <Button\r\n                     disabled={clear}\r\n                     type='link'\r\n                     icon={<CloseOutlined />}\r\n                     onClick={handleChangeClear}\r\n                  >\r\n                     Clear\r\n                  </Button>\r\n               </Col>\r\n            </Row>\r\n         </div>\r\n      </Form>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const filterContacts = (contacts, searchTerm, gender, filterNationalities, isCreator) => {\r\n\r\n   if (isCreator) {\r\n      return [];\r\n   }\r\n\r\n   const filterGender = !gender ? ['male', 'female', 'indeterminate'] : [gender];\r\n\r\n   return contacts.filter(({ fullName, gender, nationality }) => {\r\n      const isFullName = fullName.fullName.toLowerCase().includes(searchTerm.toLowerCase());\r\n      const isGender = filterGender.includes(gender);\r\n      const isNationality = filterNationalities.length ? filterNationalities.includes(nationality.name) : true;\r\n\r\n      return isFullName && isGender && isNationality;\r\n   });\r\n}","import React from \"react\";\r\nimport { Typography, Row, Col, Statistic, Descriptions } from 'antd';\r\nimport { getGendersCount } from '../../../utils/getGendersCount';\r\nimport { determineTheMajority } from '../../../utils/determineTheMajority';\r\nimport { getNumberOfNationalities } from '../../../utils/getNumberOfNationalities';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst View = () => {\r\n\r\n   const contacts = useSelector(state => state.filter.filteredContacts);\r\n\r\n   const gendersCount = getGendersCount(contacts);\r\n   const genderMajority = determineTheMajority(gendersCount);\r\n   const numberOfNationalities = getNumberOfNationalities(contacts);\r\n   const isLoading = useSelector(state => state.contacts.isLoading);\r\n\r\n   return (\r\n      <div className='box'>\r\n         <Typography.Title level={3}>\r\n            Statistic\r\n         </Typography.Title>\r\n         <Row gutter={[36, 24]}>\r\n            <Col className='_flex-noshrink'>\r\n               <Statistic title=\"Collection size\" value={contacts.length} loading={isLoading} />\r\n            </Col>\r\n            <Col className='_flex-noshrink'>\r\n               <Row>\r\n                  <Col>\r\n                     <Row gutter={16}>\r\n                        <Col>\r\n                           <Statistic title='Males' value={gendersCount.male} loading={isLoading} />\r\n                        </Col>\r\n                        <Col>\r\n                           <Statistic title='Females' value={gendersCount.female} loading={isLoading} />\r\n                        </Col>\r\n                        <Col>\r\n                           <Statistic title='Indeterminate' value={gendersCount.indeterminate} loading={isLoading} />\r\n                        </Col>\r\n                     </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                     <Typography.Text mark>{genderMajority}</Typography.Text>\r\n                  </Col>\r\n               </Row>\r\n            </Col>\r\n            <Col span={24}>\r\n               <Statistic\r\n                  title='Nationalities'\r\n                  value={numberOfNationalities}\r\n                  loading={isLoading}\r\n                  formatter={nationalities =>\r\n                     <Descriptions column={{ xs: 1, sm: 2, md: 3, lg: 4, xl: 6 }}>\r\n                        {Object.keys(nationalities).map(key =>\r\n                           <Descriptions.Item key={key} label={key} labelStyle={{ 'fontWeight': '700' }}>\r\n                              {numberOfNationalities[key]} contacts\r\n                           </Descriptions.Item>\r\n                        )}\r\n                     </Descriptions>\r\n                  }\r\n               />\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const getGendersCount = contacts =>\r\n   contacts.reduce((genderCounts, contact) =>\r\n      ({ ...genderCounts, [contact.gender]: genderCounts[contact.gender] + 1 }),\r\n      { male: 0, female: 0, indeterminate: 0 })","\r\nexport const determineTheMajority = genderCounts => {\r\n\r\n   const maxGenderCount = Math.max(...Object.values(genderCounts));\r\n\r\n   if (maxGenderCount === 0) return 'No data';\r\n\r\n   switch (maxGenderCount) {\r\n      case genderCounts.male:\r\n         return 'Men predominate';\r\n      case genderCounts.female:\r\n         return 'Women predominate';\r\n      default:\r\n         return 'Indeterminate predominate';\r\n   }\r\n}","\r\nexport const getNumberOfNationalities = (contacts) =>\r\n   contacts.reduce((numberNationalities, contact) => {\r\n      const countryName = contact.location.country.replaceAll('/', '');\r\n      return { ...numberNationalities, [countryName]: numberNationalities[countryName] + 1 || 1 }\r\n   },\r\n      {})","import { randomIntegerInRange } from '../../utils/random';\r\nimport { modifyDataForView } from '../../utils/modifyDataForView';\r\nimport { types } from './types';\r\nimport { notification } from 'antd';\r\n\r\nexport const contactsActions = Object.freeze({\r\n\r\n   startFetching() {\r\n      return {\r\n         type: types.CONTACTS_START_FETCHING,\r\n      }\r\n   },\r\n   stopFetching() {\r\n      return {\r\n         type: types.CONTACTS_STOP_FETCHING,\r\n      }\r\n   },\r\n   setTableCurrentPage(currentPage) {\r\n      return {\r\n         type: types.CONTACTS_SET_TABLE_CURRENT_PAGE,\r\n         payload: currentPage,\r\n      }\r\n   },\r\n   setTablePageSize(pageSize) {\r\n      return {\r\n         type: types.CONTACTS_SET_TABLE_PAGE_SIZE,\r\n         payload: pageSize,\r\n      }\r\n   },\r\n   setTiledCurrentPage(currentPage) {\r\n      return {\r\n         type: types.CONTACTS_SET_TILED_CURRENT_PAGE,\r\n         payload: currentPage\r\n      }\r\n   },\r\n   setTiledPageSize(pageSize) {\r\n      return {\r\n         type: types.CONTACTS_SET_TILED_PAGE_SIZE,\r\n         payload: pageSize\r\n      }\r\n   },\r\n   setSortOrder(order) {\r\n      return {\r\n         type: types.CONTACTS_SET_SORT_ORDER,\r\n         payload: order\r\n      }\r\n   },\r\n\r\n   //Async\r\n   fetchContacts: () => async dispatch => {\r\n      dispatch(contactsActions.startFetching());\r\n      try {\r\n         const contactsCount = randomIntegerInRange(100, 1500);\r\n         const response = await fetch(`https://randomuser.me/api/?seed=wezom-react-redux-test&results=${contactsCount}`);\r\n         const contacts = await response.json();\r\n         const contactsModified = modifyDataForView(contacts.results);\r\n\r\n         dispatch({ type: types.CONTACTS_FETCH_CONTACTS, payload: contactsModified });\r\n      } catch (error) {\r\n         notification.error({\r\n            message: error.message,\r\n            description: 'Please,try again later',\r\n         })\r\n      } finally {\r\n         dispatch(contactsActions.stopFetching());\r\n      }\r\n   }\r\n})","export const randomIntegerInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n","import { Avatar, Typography, Tag } from 'antd';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { InformationString } from \"../infoLine\";\r\n\r\nexport const columnsConfiguration = (sortOrder) =>\r\n   [\r\n      {\r\n         title: 'Avatar',\r\n         dataIndex: 'avatar',\r\n         key: 'avatar',\r\n         render: ({ url, userId }) => <NavLink to={`/contacts/${userId}`}>\r\n            <Avatar src={url} size={42} />\r\n         </NavLink>,\r\n         fixed: 'left',\r\n         align: 'center',\r\n         width: 80\r\n      },\r\n      {\r\n         title: 'Full Name',\r\n         dataIndex: 'fullName',\r\n         key: 'fullName',\r\n         render: ({ fullName, userId }) => <NavLink to={`/contacts/${userId}`} > {fullName}</NavLink>,\r\n         sorter: (firstContact, secondContact) =>\r\n            firstContact.fullName.fullName.localeCompare(secondContact.fullName.fullName),\r\n         align: 'left',\r\n         defaultSortOrder: sortOrder\r\n      },\r\n      {\r\n         title: 'Birthday',\r\n         dataIndex: 'birthday',\r\n         key: 'birthday',\r\n         render: birthday => <Typography.Text>\r\n            {birthday.fullFormat}<br />{birthday.age}\r\n         </Typography.Text>,\r\n         width: 250,\r\n      },\r\n      {\r\n         title: 'Email',\r\n         dataIndex: 'email',\r\n         key: 'email',\r\n         render: email => <InformationString information={email}>\r\n            <a href={`mailto:${email}`}>{email}</a>\r\n         </InformationString>,\r\n         ellipsis: true,\r\n      },\r\n      {\r\n         title: 'Phone',\r\n         dataIndex: 'phone',\r\n         key: 'phone',\r\n         render: phone => <InformationString information={phone}>\r\n            <a href={`tel:${phone}`}>{phone}</a>\r\n         </InformationString>,\r\n      },\r\n      {\r\n         title: 'Location',\r\n         dataIndex: 'location',\r\n         key: 'location',\r\n         render: location => <InformationString\r\n            information={Object.values(location).join('')}>\r\n            <Typography.Text>\r\n               <strong>{location.country}</strong>\r\n               <br />\r\n               {location.address}\r\n            </Typography.Text>\r\n         </InformationString>,\r\n         width: 250,\r\n      },\r\n      {\r\n         title: 'Nationality',\r\n         dataIndex: 'nationality',\r\n         key: 'nationality',\r\n         render: nationality => <Tag color={nationality.tagColor}>{nationality.name}</Tag>,\r\n         align: 'right',\r\n\r\n      },\r\n   ];\r\n","import React from \"react\";\r\nimport { Table } from 'antd';\r\nimport { FilterForm } from '../filterForm';\r\nimport { Statistic } from '../statistic';\r\nimport './style.scss';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsActions } from '../../../store/contacts/contacts';\r\nimport { columnsConfiguration } from './columnsConfiguration';\r\n\r\nconst View = () => {\r\n\r\n   const filteredContacts = useSelector(state => state.filter.filteredContacts);\r\n   const { isLoading, tablePageSize, tableCurrentPage, sortOrder } = useSelector(state => state.contacts);\r\n   const dispatch = useDispatch();\r\n\r\n   const handleChangePagination = (page, pageSize) => {\r\n      dispatch(contactsActions.setTableCurrentPage(page));\r\n      dispatch(contactsActions.setTablePageSize(pageSize));\r\n   }\r\n\r\n   const handleChangeSort = (pagination, filter, sort) => {\r\n      dispatch(contactsActions.setSortOrder(sort.order));\r\n   }\r\n\r\n   return (\r\n      <Table\r\n         dataSource={filteredContacts}\r\n         columns={columnsConfiguration(sortOrder)}\r\n         scroll={{ x: 1200 }}\r\n         size=\"small\"\r\n         className='table'\r\n         title={() => <FilterForm />}\r\n         footer={() => <Statistic />}\r\n         loading={isLoading}\r\n         pagination={{\r\n            defaultPageSize: tablePageSize,\r\n            defaultCurrent: tableCurrentPage,\r\n            onChange: handleChangePagination\r\n         }}\r\n         onChange={handleChangeSort}\r\n      />\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Typography, Divider, Tag } from 'antd';\r\nimport { InformationString } from '../infoLine';\r\n\r\nconst View = ({ profileData }) => {\r\n\r\n   return (\r\n      <>\r\n         <Divider dashed className='_m-bottom_15' />\r\n\r\n         <InformationString information={profileData.email} className='_m-bottom_10'>\r\n            <a href={`mailto:${profileData.email}`}>{profileData.email}</a>\r\n         </InformationString>\r\n\r\n         <InformationString information={profileData.phone} className='_m-bottom_10'>\r\n            <a href={`tel:${profileData.phone}`}>{profileData.phone}</a>\r\n         </InformationString>\r\n\r\n         <InformationString\r\n            information={profileData.location.country + profileData.location.address}\r\n            className='_m-bottom_15'>\r\n            <Typography.Text>\r\n               <strong>{profileData.location.country}</strong>\r\n               <br />\r\n               {profileData.location.address}\r\n            </Typography.Text>\r\n         </InformationString>\r\n\r\n         <Divider dashed className='_m-bottom_15' />\r\n         <Tag color={profileData.nationality.tagColor}>{profileData.nationality.name}</Tag>\r\n      </>\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { List, Card } from 'antd';\r\nimport './style.scss';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FilterForm } from '../filterForm';\r\nimport { Statistic } from '../statistic';\r\nimport { ProfileInformation } from '../profileInfo';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsActions } from '../../../store/contacts/contacts';\r\n\r\nconst View = () => {\r\n\r\n   const { isLoading, tiledCurrentPage, tiledPageSize } = useSelector(state => state.contacts);\r\n   const filteredContacts = useSelector(state => state.filter.filteredContacts);\r\n   const dispatch = useDispatch();\r\n\r\n   const handleChangePagination = (page, pageSize) => {\r\n      dispatch(contactsActions.setTiledPageSize(pageSize));\r\n      dispatch(contactsActions.setTiledCurrentPage(page));\r\n   }\r\n\r\n   return (\r\n      <List\r\n         className='list'\r\n         grid={{\r\n            gutter: 12,\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 3,\r\n            lg: 3,\r\n            xl: 3,\r\n            xxl: 3,\r\n         }}\r\n         header={<FilterForm />}\r\n         footer={<Statistic contacts={filteredContacts} />}\r\n         dataSource={filteredContacts}\r\n         loading={isLoading}\r\n         renderItem={contact =>\r\n            <List.Item>\r\n               <Card hoverable\r\n                  className='card-contact'\r\n                  cover={<NavLink to={`/contacts/${contact.fullName.userId}`}>\r\n                     <img alt={contact.fullName.fullName} src={contact.avatar.url} />\r\n                  </NavLink>}\r\n               >\r\n                  <Card.Meta title={\r\n                     <>\r\n                        <NavLink to={`/contacts/${contact.fullName.userId}`}>\r\n                           {contact.fullName.fullName} {contact.birthday[1]}\r\n                        </NavLink>\r\n                     </>\r\n                  }\r\n                     description={<ProfileInformation profileData={contact} />}\r\n                  />\r\n               </Card>\r\n            </List.Item>\r\n         }\r\n         pagination={{\r\n            size: 'small',\r\n            defaultPageSize: tiledPageSize,\r\n            defaultCurrent: tiledCurrentPage,\r\n            pageSizeOptions: [6, 12, 36, 48],\r\n            onChange: handleChangePagination,\r\n         }}\r\n      />\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Tooltip, Button } from 'antd';\r\nimport { ReloadOutlined, UnorderedListOutlined, AppstoreOutlined } from '@ant-design/icons';\r\nimport './style.scss';\r\n\r\nconst View = ({ reloadData, setViewMode, viewMode }) => {\r\n\r\n   const tableViewButtonType = viewMode === 'tabular' ? 'primary' : 'default';\r\n   const tiledViewButtonType = viewMode === 'tiled' ? 'primary' : 'default';\r\n\r\n   const changeViewMode = (event) => {\r\n      const viewMode = event.currentTarget.value;\r\n\r\n      event.currentTarget.type = 'primary';\r\n      localStorage.setItem('view-mode', viewMode);\r\n      setViewMode(viewMode);\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Tooltip title={'Update data'}>\r\n            <Button\r\n               type=\"dashed\"\r\n               shape='circle'\r\n               icon={<ReloadOutlined />}\r\n               className='reload_button'\r\n               onClick={reloadData}\r\n            />\r\n         </Tooltip>\r\n         <Tooltip title='Tiled view'>\r\n            <Button\r\n               type={tiledViewButtonType}\r\n               icon={<AppstoreOutlined />}\r\n               value='tiled'\r\n               onClick={changeViewMode}\r\n            />\r\n         </Tooltip>\r\n         <Tooltip title='Tabular view'>\r\n            <Button\r\n               type={tableViewButtonType}\r\n               icon={<UnorderedListOutlined />}\r\n               value='tabular'\r\n               onClick={changeViewMode}\r\n            />\r\n         </Tooltip>\r\n      </>\r\n   );\r\n}\r\n\r\nexport { View };","import { HomePage, ProfilePage, ContactsPage, ContactView, PageNotFound } from \"../pages\";\r\n\r\nexport const routes = Object.freeze({\r\n   'home': {\r\n      path: '/',\r\n      page: HomePage,\r\n      name: 'Home',\r\n      exact: true,\r\n   },\r\n   'profile': {\r\n      path: '/profile',\r\n      page: ProfilePage,\r\n      name: 'Profile',\r\n   },\r\n   'contacts': {\r\n      path: '/contacts',\r\n      page: ContactsPage,\r\n      name: 'Contacts',\r\n      exact: true,\r\n   },\r\n   'viewContact': {\r\n      path: '/contacts/:id',\r\n      page: ContactView,\r\n      name: 'ContactView',\r\n   },\r\n   pageNotFound: {\r\n      path: '/*',\r\n      page: PageNotFound,\r\n      name: 'PageNotFound',\r\n   }\r\n});\r\n","import React from \"react\";\r\nimport ReactLogo from \"../../assets/images/react-logo.svg\";\r\nimport '../../assets/styles/page.scss';\r\n\r\nconst View = () => {\r\n\r\n   return (\r\n      <div className='page page--home'>\r\n         <img src={ReactLogo} alt=\"React Logo\" className='react-logo' />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport { View };\r\n","import React from \"react\";\r\nimport { Row, Col, Image, Typography, Spin } from 'antd';\r\nimport { ProfileInformation } from '../../components';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst View = () => {\r\n\r\n   const { personalInformation, isLoading } = useSelector(state => state.auth);\r\n   const isAuthorized = localStorage.getItem('auth');\r\n\r\n   if (!isAuthorized) {\r\n      return <Redirect to={'/not-found'} />\r\n   }\r\n\r\n   return (\r\n      <div className='page page--profile'>\r\n         <Row justify='center'>\r\n            <Col span={24} className='_text-center'>\r\n               <Typography.Title level={2}>Profile</Typography.Title>\r\n            </Col>\r\n            <Col>\r\n               <Row gutter={[0, { sm: 28, xs: 28 }]} className='profile-row' justify='center'>\r\n                  {isLoading ?\r\n                     <Col><Spin size='large' /></Col> :\r\n                     <>\r\n                        <Col lg={11} className='profile-column'>\r\n                           <Image\r\n                              width={250}\r\n                              src={personalInformation.avatar.url}\r\n                           />\r\n                        </Col>\r\n                        <Col lg={13} className='profile-column'>\r\n                           <Typography.Title level={3} >\r\n                              {personalInformation.fullName.fullName}\r\n                              <Typography.Text type='secondary' className='age'>\r\n                                 {` (${personalInformation.birthday.age})`}\r\n                              </Typography.Text>\r\n                           </Typography.Title>\r\n                           <ProfileInformation profileData={personalInformation} />\r\n                        </Col>\r\n                     </>\r\n                  }\r\n               </Row>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Typography } from 'antd';\r\nimport { TableView, ListView, ContactsControl } from '../../components';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { contactsActions } from '../../store/contacts/contacts';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst View = () => {\r\n\r\n   if (!localStorage.getItem('view-mode')) {\r\n      localStorage.setItem('view-mode', 'tabular')\r\n   }\r\n\r\n   const [viewMode, setViewMode] = useState(localStorage.getItem('view-mode'));\r\n   const isAuthorized = localStorage.getItem('auth');\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(contactsActions.fetchContacts());\r\n   }, [dispatch])\r\n\r\n   if (!isAuthorized) {\r\n      return <Redirect to={'/not-found'} />\r\n   }\r\n\r\n   const handleReloadData = () => dispatch(contactsActions.fetchContacts());\r\n\r\n   const getViewMode = () => {\r\n      switch (viewMode) {\r\n         case 'tabular':\r\n            return (<TableView />);\r\n         case 'tiled':\r\n            return (<ListView />);\r\n         default:\r\n            return null;\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className='page page--contacts'>\r\n         <Row justify='space-between'>\r\n            <Col>\r\n               <Typography.Title level={2}>Contacts</Typography.Title>\r\n            </Col>\r\n            <Col>\r\n               <ContactsControl\r\n                  reloadData={handleReloadData}\r\n                  setViewMode={setViewMode}\r\n                  viewMode={viewMode} />\r\n            </Col>\r\n         </Row>\r\n         <Row>\r\n            {getViewMode()}\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { Row, Col, Typography, Spin, Button, Image } from 'antd';\r\nimport { ProfileInformation } from '../../components';\r\nimport { DoubleLeftOutlined } from '@ant-design/icons';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport { contactsActions } from '../../store/contacts/contacts';\r\n\r\nconst View = () => {\r\n\r\n   const { contacts, isLoading } = useSelector(state => state.contacts);\r\n   const isAuthorized = localStorage.getItem('auth');\r\n   const { id } = useParams();\r\n   const history = useHistory();\r\n   const contact = contacts[id - 1];\r\n   const dispatch = useDispatch();\r\n\r\n   const handleClickBack = () => {\r\n      history.push('/contacts');\r\n   }\r\n\r\n   useEffect(() => {\r\n      dispatch(contactsActions.fetchContacts());\r\n   }, [dispatch])\r\n\r\n   if (!isAuthorized) {\r\n      return <Redirect to={'/not-found'} />\r\n   }\r\n\r\n\r\n   return (\r\n      <div className='page page--contactView'>\r\n         <Row justify='center' gutter={[0, 20]}>\r\n            <Col span={24} className='_text-center'>\r\n               <Typography.Title level={2} className='_m-none'>Contact View</Typography.Title>\r\n            </Col>\r\n            <Col>\r\n               <Row gutter={[0, { sm: 28, xs: 28 }]} className='contact-row' justify='center'>\r\n                  {isLoading ?\r\n                     <Col><Spin size='large' /></Col> :\r\n                     <>\r\n                        <Col lg={11} className='contact-column'>\r\n                           <Image\r\n                              width={250}\r\n                              src={contact.avatar.url}\r\n                           />\r\n                        </Col>\r\n                        <Col lg={13} className='contact-column'>\r\n                           <Typography.Title level={3}>\r\n                              {contact.fullName.fullName}\r\n                              <Typography.Text type='secondary' className='age'>\r\n                                 {` (${contact.birthday.age})`}\r\n                              </Typography.Text>\r\n                           </Typography.Title>\r\n                           <ProfileInformation profileData={contact} />\r\n                        </Col>\r\n                     </>\r\n                  }\r\n               </Row>\r\n            </Col>\r\n            <Col span={24} className='_text-center'>\r\n               <Button\r\n                  type='primary'\r\n                  icon={<DoubleLeftOutlined />}\r\n                  onClick={handleClickBack}\r\n               >\r\n                  Back\r\n               </Button>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Row, Col, Typography, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../../assets/styles/page.scss';\r\n\r\nconst View = () => {\r\n\r\n   const history = useHistory();\r\n\r\n   const handleGoToHome = () => history.push('/');\r\n\r\n   return (\r\n      <div className='page page--notFound'>\r\n         <Row className='_text-center' gutter={[0, 20]}>\r\n            <Col span={24}>\r\n               <Typography.Title level={1} className='notFoundTitle'>\r\n                  404\r\n               </Typography.Title>\r\n            </Col>\r\n            <Col span={24}>\r\n               <Typography.Title level={3}>\r\n                  Requested page not found!\r\n               </Typography.Title>\r\n            </Col>\r\n            <Col span={24}>\r\n               <Button\r\n                  type='primary'\r\n                  size='large'\r\n                  onClick={handleGoToHome}\r\n               >Back to home</Button>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","export default __webpack_public_path__ + \"static/media/backdrop.743bc5e8.jpg\";","import backdrop from '../../assets/images/backdrop.jpg';\r\n\r\nexport const style = {\r\n   content: {\r\n      backgroundImage: `url(${backdrop})`,\r\n   },\r\n};","import React from \"react\";\r\nimport { style } from \"./style\";\r\nimport { Layout } from 'antd'\r\nimport { Header } from \"../../components/app/header\";\r\nimport './style.scss';\r\nimport { useLayout } from './hooks/useLayout';\r\n\r\nconst View = ({ children }) => {\r\n\r\n   const currentYear = useLayout();\r\n\r\n   return (\r\n      <Layout className={'layout layout--base'}>\r\n         <Layout.Header className={'layout__header'}><Header /></Layout.Header>\r\n         <Layout.Content className={'layout__content'} style={style.content}>{children}</Layout.Content>\r\n         <Layout.Footer className={'layout__footer'}>{currentYear} &copy; Wezom React-Redux Test</Layout.Footer>\r\n      </Layout>\r\n   );\r\n}\r\n\r\nexport { View };","import { useCallback, useEffect, useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authActions } from '../../../store/auth/auth';\r\n\r\nexport const useLayout = () => {\r\n   const currentYear = useMemo(() => new Date().getFullYear(), []);\r\n   const dispatch = useDispatch();\r\n   const history = useHistory();\r\n\r\n   useEffect(() => {\r\n      const user = localStorage.getItem('auth');\r\n      if (user) {\r\n         const seedKey = JSON.parse(user).profileSeedKey;\r\n         dispatch(authActions.fetchPersonalData(seedKey));\r\n         dispatch(authActions.setAuthorized(true));\r\n      }\r\n   }, [dispatch])\r\n\r\n   const checkAuthorization = useCallback(() => {\r\n      const user = localStorage.getItem('auth');\r\n\r\n      if (!user) {\r\n\r\n         history.push('/');\r\n         dispatch(authActions.setAuthorized(false));\r\n         return;\r\n      }\r\n      const seedKey = JSON.parse(user).profileSeedKey;\r\n\r\n      dispatch(authActions.fetchPersonalData(seedKey));\r\n      dispatch(authActions.setAuthorized(true));\r\n      history.push('/profile');\r\n\r\n   }, [dispatch, history])\r\n\r\n   useEffect(() => {\r\n      window.addEventListener('storage', checkAuthorization);\r\n\r\n      return () => {\r\n         window.removeEventListener('storage', checkAuthorization);\r\n      }\r\n   }, [checkAuthorization])\r\n\r\n   return currentYear;\r\n}","import React from \"react\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { routes } from '../routes';\r\nimport { LayoutBase } from '../../layout';\r\n\r\nconst View = () => {\r\n\r\n   return (\r\n      <LayoutBase>\r\n         <Switch >\r\n            {\r\n               Object.keys(routes).map((key) => {\r\n                  const { page: Page, ...route } = routes[key];\r\n\r\n                  return <Route\r\n                     key={route.path}\r\n                     {...route}\r\n                  ><Page /></Route>\r\n               })\r\n            }\r\n         </Switch>\r\n      </LayoutBase>\r\n   )\r\n}\r\n\r\nexport { View };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { store } from './store';\nimport { history } from './store/middleware';\nimport './assets/styles/index.scss';\nimport 'antd/dist/antd.css';\nimport { RoutesSwitch } from './routes';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <HashRouter history={history}>\n      <RoutesSwitch />\n    </HashRouter>\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}