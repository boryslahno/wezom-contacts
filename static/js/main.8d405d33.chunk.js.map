{"version":3,"sources":["assets/images/wezom-logo.svg","components/app/logo/view.jsx","assets/images/react-logo.svg","pages/notFound/view.jsx","constants/nationalities.js","utils/getBirthday.js","utils/getDayOfWeek.js","utils/convertTime.js","utils/modifyDataForView.js","utils/getFullName.js","utils/getResidence.js","utils/getNationalities.js","store/contacts/types.js","store/contacts/contacts.js","utils/random.js","routes/routes.js","pages/home/view.jsx","pages/profile/view.jsx","pages/contacts/view.jsx","pages/contactsView/view.jsx","components/app/navbar/view.jsx","store/auth/types.js","store/auth/auth.js","components/app/modal/view.jsx","components/app/header/view.jsx","assets/images/backdrop.jpg","layout/base/style.js","layout/base/view.jsx","routes/switch/view.jsx","components/app/root/view.js","components/app/infoLine/view.jsx","store/filter/types.js","store/filter/filter.js","components/app/filterForm/view.jsx","utils/filterContacts.js","components/app/statistic/view.jsx","utils/getGendersCount.js","utils/determineTheMajority.js","utils/getNumberOfNationalities.js","components/app/table/view.jsx","components/app/profileInfo/view.jsx","components/app/list/view.jsx","components/app/contactsControl/View.jsx","store/auth/authReducer.js","store/contacts/contactsReducer.js","store/filter/filterReducer.js","store/middleware.js","store/rootReducer.js","store/index.js","index.js"],"names":["View","React","memo","to","exact","className","activeClassName","src","WezomLogo","alt","history","useNavigate","gutter","span","Title","level","type","size","onClick","NATIONALITIES","AU","name","color","BR","CA","CH","DE","DK","ES","FI","FR","GB","IE","IR","NO","NL","NZ","TR","US","getBirthDay","date","birthDate","match","time","split","year","months","day","dayOfWeek","Date","getDay","convertedTime","timeArray","join","convertTime","modifyDataForView","contacts","map","contact","index","key","location","postcode","toString","avatar","url","picture","large","userId","fullName","title","first","last","birthday","fullFormat","dob","age","email","phone","country","address","street","number","city","state","nationality","abbreviation","nat","tagColor","gender","types","Object","freeze","CONTACTS_FETCH_CONTACTS","CONTACTS_START_FETCHING","CONTACTS_STOP_FETCHING","CONTACTS_ERROR_FETCHING","CONTACTS_SET_TABLE_CURRENT_PAGE","CONTACTS_SET_TABLE_PAGE_SIZE","CONTACTS_SET_TILED_CURRENT_PAGE","CONTACTS_SET_TILED_PAGE_SIZE","CONTACTS_SET_SORT_ORDER","contactsActions","startFetching","stopFetching","setTableCurrentPage","currentPage","payload","setTablePageSize","pageSize","setTiledCurrentPage","setTiledPageSize","setSortOrder","order","fetchContacts","dispatch","a","min","max","contactsCount","Math","floor","random","fetch","response","json","contactsModified","results","notification","error","message","description","routes","path","page","ReactLogo","useSelector","auth","personalInformation","isLoading","localStorage","getItem","justify","sm","xs","lg","width","Text","profileData","setItem","useState","viewMode","setViewMode","isAuthorized","useDispatch","useEffect","reloadData","getViewMode","id","useParams","icon","DoubleLeftOutlined","isAuth","publicRoutes","useMemo","privateRoutes","route","AUTH_START_FETCHING","AUTH_STOP_FETCHING","AUTH_OPEN_MODAL","AUTH_CLOSE_MODAL","AUTH_FETCH_DATA","AUTH_SET_AUTHORIZED","authActions","openModal","closeModal","setAuthorized","fetchPersonalData","seedKey","personalData","isModalOpen","hideModal","visible","centered","closable","onCancel","footer","onFinish","formData","JSON","stringify","profileSeedKey","Item","rules","required","hasFeedback","placeholder","prefix","UserOutlined","validator","_","password","test","Promise","reject","Error","length","resolve","passwordValidate","Password","LockOutlined","flex","htmlType","CloseOutlined","danger","menu","Divider","removeItem","success","LogoutOutlined","button","overlay","indicator","LoadingOutlined","spin","align","DownOutlined","LoginOutlined","style","content","backgroundImage","backdrop","children","currentYear","getFullYear","user","parse","checkAuthorization","useCallback","window","addEventListener","removeEventListener","Header","Content","Footer","keys","Page","element","information","wrap","copyable","text","FILTER_SET_CONTACTS","FILTER_SET_SEARCH_TERM","FILTER_SET_GENDER","FILTER_SET_NATIONALITY","FILTER_SET_ISCREATOR","FILTER_CLEAR","filterActions","setFilteredContacts","setSearchTerm","searchTerm","setGender","setNationality","setIsCreator","isCreator","setClear","isClear","nationalities","values","Option","value","filter","clear","resultFilterContacts","filterNationalities","filterGender","toLowerCase","includes","filterContacts","Search","onChange","event","target","mode","maxTagCount","checked","disabled","filteredContacts","gendersCount","reduce","genderCounts","male","female","indeterminate","getGendersCount","genderMajority","maxGenderCount","determineTheMajority","numberOfNationalities","numberNationalities","countryName","replaceAll","getNumberOfNationalities","loading","mark","formatter","column","md","xl","label","labelStyle","tablePageSize","tableCurrentPage","sortOrder","columns","dataIndex","render","fixed","sorter","firstContact","secondContact","localeCompare","defaultSortOrder","href","ellipsis","dataSource","scroll","x","pagination","defaultPageSize","defaultCurrent","sort","dashed","tiledCurrentPage","tiledPageSize","grid","xxl","header","renderItem","hoverable","cover","Meta","pageSizeOptions","tableViewButtonType","tiledViewButtonType","changeViewMode","currentTarget","shape","ReloadOutlined","AppstoreOutlined","UnorderedListOutlined","intitialState","initialState","createBrowserHistory","basename","myRouterMiddleware","routerMiddleware","middleware","thunk","rootReducer","combineReducers","router","connectRouter","action","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8d405d33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wezom-logo.e70df2c4.svg\";","import React from \"react\";\r\nimport WezomLogo from '../../../assets/images/wezom-logo.svg';\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst View = React.memo(() => {\r\n\r\n   return (\r\n      <NavLink to='/' exact='true' className={'logo'} activeClassName={'is-active'}>\r\n         <img src={WezomLogo} alt='Wezom' className='logo__img'></img>\r\n      </NavLink>\r\n   );\r\n});\r\n\r\nexport { View };","export default __webpack_public_path__ + \"static/media/react-logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { Row, Col, Typography, Button } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../assets/styles/page.scss';\r\n\r\nconst View = () => {\r\n\r\n   const history = useNavigate();\r\n\r\n   const handleGoToHome = () => history('/');\r\n\r\n   return (\r\n      <div className={'page page--notFound'}>\r\n         <Row className={'_text-center'} gutter={[0, 20]}>\r\n            <Col span={24}>\r\n               <Typography.Title level={1} className={'notFoundTitle'}>\r\n                  404\r\n               </Typography.Title>\r\n            </Col>\r\n            <Col span={24}>\r\n               <Typography.Title level={3}>\r\n                  Requested page not found!\r\n               </Typography.Title>\r\n            </Col>\r\n            <Col span={24}>\r\n               <Button\r\n                  type={'primary'}\r\n                  size={'large'}\r\n                  onClick={handleGoToHome}\r\n               >Back to home</Button>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const NATIONALITIES = {\r\n   AU: { name: 'Australian', color: 'magenta' },\r\n   BR: { name: 'Brazilian', color: 'red' },\r\n   CA: { name: 'Canadian', color: 'volcano' },\r\n   CH: { name: 'Swiss', color: 'orange' },\r\n   DE: { name: 'German', color: 'gold' },\r\n   DK: { name: 'Danish', color: 'lime' },\r\n   ES: { name: 'Spanish', color: 'green' },\r\n   FI: { name: 'Finnish', color: 'cyan' },\r\n   FR: { name: 'French', color: 'blue' },\r\n   GB: { name: 'British', color: 'geekblue' },\r\n   IE: { name: 'Irish', color: 'purple' },\r\n   IR: { name: 'Iranian', color: '#f50' },\r\n   NO: { name: 'Norwegian', color: '#2db7f5' },\r\n   NL: { name: 'Dutch', color: '#87d068' },\r\n   NZ: { name: 'New Zealander', color: '#9e1068' },\r\n   TR: { name: 'Turkish', color: '#ffd666' },\r\n   US: { name: 'American' },\r\n};","import { getDayOfWeek } from './getDayOfWeek';\r\nimport { convertTime } from './convertTime';\r\n\r\nexport const getBirthDay = date => {\r\n   const birthDate = date.match(/\\d+-\\d+-\\d+/g)[0];\r\n   const time = date.match(/\\d+:\\d+:\\d+/g)[0];\r\n   const [year, months, day] = birthDate.split('-');\r\n   const dayOfWeek = getDayOfWeek(new Date(birthDate).getDay())\r\n   const convertedTime = convertTime(time.split(':'));\r\n\r\n   return `${dayOfWeek}, ${+months}/${+day}/${year}, ${convertedTime}`;\r\n}","\r\nexport const getDayOfWeek = numberOfTheDay => {\r\n   const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\n   return days[numberOfTheDay - 1];\r\n}","\r\nexport const convertTime = timeArray => {\r\n   const convertedTime = timeArray;\r\n\r\n   if (convertedTime[0] >= 0 && convertedTime[0] < 12) {\r\n\r\n      convertedTime[0] = +convertedTime[0];\r\n\r\n      return `${convertedTime.join(':')} AM`;\r\n   }\r\n\r\n   convertedTime[0] = +convertedTime[0] - 12;\r\n\r\n   return `${convertedTime.join(':')} PM`;\r\n}","import { getFullName } from './getFullName';\r\nimport { getResidence } from './getResidence';\r\nimport { getNationality } from './getNationalities';\r\nimport { getBirthDay } from './getBirthday';\r\n\r\nconst modifyDataForView = contacts =>\r\n   contacts.map((contact, index) => {\r\n      return {\r\n         key: contact.location.postcode.toString() + index,\r\n         avatar: { url: contact.picture.large, userId: index + 1 },\r\n         fullName: { fullName: getFullName(contact.name), userId: index + 1 },\r\n         birthday: { fullFormat: getBirthDay(contact.dob.date), age: `${contact.dob.age} years` },\r\n         email: contact.email,\r\n         phone: contact.phone,\r\n         location: getResidence(contact.location),\r\n         nationality: getNationality(contact.nat),\r\n         gender: contact.gender,\r\n      }\r\n   })\r\n\r\nexport { modifyDataForView };","\r\nexport const getFullName = (name) =>\r\n   `${name.title}. ${name.first} ${name.last}`","\r\nexport const getResidence = location =>\r\n({\r\n   country: `/${location.country}/`,\r\n   address: `${location.street.number} ${location.street.name}, ${location.city}, ${location.state} ${location.postcode}`\r\n})","import { NATIONALITIES } from '../constants/nationalities';\r\n\r\nexport const getNationality = abbreviation =>\r\n({\r\n   name: NATIONALITIES[abbreviation].name,\r\n   tagColor: NATIONALITIES[abbreviation].color,\r\n})","\r\nexport const types = Object.freeze({\r\n   CONTACTS_FETCH_CONTACTS: 'CONTACTS_FETCH_CONTACTS',\r\n   CONTACTS_START_FETCHING: 'CONTACTS_START_FETCHING',\r\n   CONTACTS_STOP_FETCHING: 'CONTACTS_STOP_FETCHING',\r\n   CONTACTS_ERROR_FETCHING: 'CONTACTS_ERROR_FETCHING',\r\n   CONTACTS_SET_TABLE_CURRENT_PAGE: 'CONTACTS_SET_TABLE_CURRENT_PAGE',\r\n   CONTACTS_SET_TABLE_PAGE_SIZE: 'CONTACTS_SET_TABLE_PAGE_SIZE',\r\n   CONTACTS_SET_TILED_CURRENT_PAGE: 'CONTACTS_SET_TILED_CURRENT_PAGE',\r\n   CONTACTS_SET_TILED_PAGE_SIZE: 'CONTACTS_SET_TILED_PAGE_SIZE',\r\n   CONTACTS_SET_SORT_ORDER: 'CONTACTS_SET_SORT_ORDER',\r\n})","import { randomIntegerInRange } from '../../utils/random';\r\nimport { modifyDataForView } from '../../utils/modifyDataForView';\r\nimport { types } from './types';\r\nimport { notification } from 'antd';\r\n\r\nexport const contactsActions = Object.freeze({\r\n\r\n   startFetching() {\r\n      return {\r\n         type: types.CONTACTS_START_FETCHING,\r\n      }\r\n   },\r\n   stopFetching() {\r\n      return {\r\n         type: types.CONTACTS_STOP_FETCHING,\r\n      }\r\n   },\r\n   setTableCurrentPage(currentPage) {\r\n      return {\r\n         type: types.CONTACTS_SET_TABLE_CURRENT_PAGE,\r\n         payload: currentPage,\r\n      }\r\n   },\r\n   setTablePageSize(pageSize) {\r\n      return {\r\n         type: types.CONTACTS_SET_TABLE_PAGE_SIZE,\r\n         payload: pageSize,\r\n      }\r\n   },\r\n   setTiledCurrentPage(currentPage) {\r\n      return {\r\n         type: types.CONTACTS_SET_TILED_CURRENT_PAGE,\r\n         payload: currentPage\r\n      }\r\n   },\r\n   setTiledPageSize(pageSize) {\r\n      return {\r\n         type: types.CONTACTS_SET_TILED_PAGE_SIZE,\r\n         payload: pageSize\r\n      }\r\n   },\r\n   setSortOrder(order) {\r\n      return {\r\n         type: types.CONTACTS_SET_SORT_ORDER,\r\n         payload: order\r\n      }\r\n   },\r\n\r\n   //Async\r\n   fetchContacts: () => async dispatch => {\r\n      dispatch(contactsActions.startFetching());\r\n      try {\r\n         const contactsCount = randomIntegerInRange(100, 1500);\r\n         const response = await fetch(`https://randomuser.me/api/?seed=wezom-react-redux-test&results=${contactsCount}`);\r\n         const contacts = await response.json();\r\n         const contactsModified = modifyDataForView(contacts.results);\r\n\r\n         dispatch({ type: types.CONTACTS_FETCH_CONTACTS, payload: contactsModified });\r\n      } catch (error) {\r\n         notification.error({\r\n            message: error.message,\r\n            description: 'Please,try again later',\r\n         })\r\n      } finally {\r\n         dispatch(contactsActions.stopFetching());\r\n      }\r\n   }\r\n})","export const randomIntegerInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n","import { HomePage, ProfilePage, ContactsPage, ContactView } from \"../pages\";\r\n\r\nexport const routes = Object.freeze({\r\n   'home': {\r\n      path: '/',\r\n      page: HomePage,\r\n      name: 'Home',\r\n      exact: true,\r\n   },\r\n   'profile': {\r\n      path: '/profile',\r\n      page: ProfilePage,\r\n      name: 'Profile',\r\n   },\r\n   'contacts': {\r\n      path: '/contacts',\r\n      page: ContactsPage,\r\n      name: 'Contacts',\r\n      exact: true,\r\n   },\r\n   'viewContact': {\r\n      path: '/contacts/:id',\r\n      page: ContactView,\r\n      name: 'ContactView'\r\n   }\r\n});\r\n","import React from \"react\";\r\nimport ReactLogo from \"../../assets/images/react-logo.svg\";\r\nimport '../../assets/styles/page.scss';\r\n\r\nconst View = () => {\r\n\r\n   return (\r\n      <div className={'page page--home'}>\r\n         <img src={ReactLogo} alt=\"React Logo\" className={'react-logo'}></img>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport { View };\r\n","import React from \"react\";\r\nimport { Row, Col, Image, Typography, Spin } from 'antd';\r\nimport { ProfileInformation } from '../../components';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst View = () => {\r\n\r\n   const { personalInformation, isLoading } = useSelector(state => state.auth);\r\n   const isAuthorized = localStorage.getItem('auth');\r\n\r\n   if (!isAuthorized) {\r\n      return <Navigate to={'/not-found'} />\r\n   }\r\n\r\n   return (\r\n      <div className={'page page--profile'}>\r\n         <Row justify={'center'}>\r\n            <Col span={24} className={'_text-center'}>\r\n               <Typography.Title level={2}>Profile</Typography.Title>\r\n            </Col>\r\n            <Col>\r\n               <Row gutter={[0, { sm: 28, xs: 28 }]} className={'profile-row'} justify={'center'}>\r\n                  {isLoading ?\r\n                     <Col><Spin size={'large'} /></Col> :\r\n                     <>\r\n                        <Col lg={11} className={'profile-column'}>\r\n                           <Image\r\n                              width={250}\r\n                              src={personalInformation.avatar.url}\r\n                           />\r\n                        </Col>\r\n                        <Col lg={13} className={'profile-column'}>\r\n                           <Typography.Title level={3} >\r\n                              {personalInformation.fullName.fullName}\r\n                              <Typography.Text type={'secondary'} className={'age'}>\r\n                                 {` (${personalInformation.birthday.age})`}\r\n                              </Typography.Text>\r\n                           </Typography.Title>\r\n                           <ProfileInformation profileData={personalInformation} />\r\n                        </Col>\r\n                     </>\r\n                  }\r\n               </Row>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Typography } from 'antd';\r\nimport { TableView, ListView, ContactsControl } from '../../components';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { contactsActions } from '../../store/contacts/contacts';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst View = () => {\r\n\r\n   if (!localStorage.getItem('view-mode')) {\r\n      localStorage.setItem('view-mode', 'tabular')\r\n   }\r\n\r\n   const [viewMode, setViewMode] = useState(localStorage.getItem('view-mode'));\r\n   const isAuthorized = localStorage.getItem('auth');\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(contactsActions.fetchContacts());\r\n   }, [dispatch])\r\n\r\n   if (!isAuthorized) {\r\n      return <Navigate to={'/not-found'} />\r\n   }\r\n\r\n   const handleReloadData = () => dispatch(contactsActions.fetchContacts());\r\n\r\n   const getViewMode = () => {\r\n      switch (viewMode) {\r\n         case 'tabular':\r\n            return (<TableView />);\r\n         case 'tiled':\r\n            return (<ListView />);\r\n         default:\r\n            return null;\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className={'page page--contacts'}>\r\n         <Row justify={'space-between'}>\r\n            <Col>\r\n               <Typography.Title level={2}>Contacts</Typography.Title>\r\n            </Col>\r\n            <Col>\r\n               <ContactsControl\r\n                  reloadData={handleReloadData}\r\n                  setViewMode={setViewMode}\r\n                  viewMode={viewMode} />\r\n            </Col>\r\n         </Row>\r\n         <Row>\r\n            {getViewMode()}\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { Row, Col, Typography, Spin, Button, Image } from 'antd';\r\nimport { ProfileInformation } from '../../components';\r\nimport { DoubleLeftOutlined } from '@ant-design/icons';\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport { contactsActions } from '../../store/contacts/contacts';\r\n\r\nconst View = () => {\r\n\r\n   const { contacts, isLoading } = useSelector(state => state.contacts);\r\n   const isAuthorized = localStorage.getItem('auth');\r\n   const { id } = useParams();\r\n   const history = useNavigate();\r\n   const contact = contacts[id - 1];\r\n   const dispatch = useDispatch();\r\n\r\n   const handleClickBack = () => {\r\n      history('/contacts');\r\n   }\r\n\r\n   useEffect(() => {\r\n      dispatch(contactsActions.fetchContacts());\r\n   }, [dispatch])\r\n\r\n   if (!isAuthorized) {\r\n      return <Navigate to={'/not-found'} />\r\n   }\r\n\r\n\r\n   return (\r\n      <div className={'page page--contactView'}>\r\n         <Row justify={'center'} gutter={[0, 20]}>\r\n            <Col span={24} className={'_text-center'}>\r\n               <Typography.Title level={2} className={'_m-none'}>Contact View</Typography.Title>\r\n            </Col>\r\n            <Col>\r\n               <Row gutter={[0, { sm: 28, xs: 28 }]} className={'contact-row'} justify={'center'}>\r\n                  {isLoading ?\r\n                     <Col><Spin size={'large'} /></Col> :\r\n                     <>\r\n                        <Col lg={11} className={'contact-column'}>\r\n                           <Image\r\n                              width={250}\r\n                              src={contact.avatar.url}\r\n                           />\r\n                        </Col>\r\n                        <Col lg={13} className={'contact-column'}>\r\n                           <Typography.Title level={3}>\r\n                              {contact.fullName.fullName}\r\n                              <Typography.Text type={'secondary'} className={'age'}>\r\n                                 {` (${contact.birthday.age})`}\r\n                              </Typography.Text>\r\n                           </Typography.Title>\r\n                           <ProfileInformation profileData={contact} />\r\n                        </Col>\r\n                     </>\r\n                  }\r\n               </Row>\r\n            </Col>\r\n            <Col span={24} className={'_text-center'}>\r\n               <Button\r\n                  type={'primary'}\r\n                  icon={<DoubleLeftOutlined />}\r\n                  onClick={handleClickBack}\r\n               >\r\n                  Back\r\n               </Button>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","import React, { useMemo } from \"react\";\r\nimport './style.scss';\r\nimport { routes } from '../../../routes/routes';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst View = () => {\r\n\r\n   const isAuth = useSelector(state => state.auth.isAuthorized);\r\n\r\n   const publicRoutes = useMemo(() => [\r\n      { name: 'Home', key: 'home' },\r\n   ], [])\r\n\r\n   const privateRoutes = useMemo(() => [\r\n      { name: 'Home', key: 'home' },\r\n      { name: 'Contacts', key: 'contacts' }\r\n   ], [])\r\n\r\n   return (\r\n      <div className={'navbar'}>\r\n         <ul className={'navbar__list'}>\r\n            {isAuth ?\r\n               privateRoutes.map(route =>\r\n                  <li key={route.key} className={'navbar__item'}>\r\n                     <NavLink to={routes[route.key].path} className={'navbar__link'}>\r\n                        {route.name}\r\n                     </NavLink>\r\n                  </li>\r\n               )\r\n               :\r\n               publicRoutes.map(route =>\r\n                  <li key={route.key} className={'navbar__item'}>\r\n                     <NavLink to={routes[route.key].path} className={'navbar__link'}>\r\n                        {route.name}\r\n                     </NavLink>\r\n                  </li>\r\n               )\r\n            }\r\n         </ul>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const types = Object.freeze({\r\n   AUTH_START_FETCHING: 'AUTH_START_FETCHING',\r\n   AUTH_STOP_FETCHING: 'AUTH_STOP_FETCHING',\r\n   AUTH_OPEN_MODAL: 'AUTH_OPEN_MODAL',\r\n   AUTH_CLOSE_MODAL: 'AUTH_CLOSE_MODAL',\r\n   AUTH_FETCH_DATA: 'AUTH_FETCH_DATA',\r\n   AUTH_SET_AUTHORIZED: 'AUTH_SET_AUTHORIZED',\r\n});","import { notification } from 'antd';\r\nimport { modifyDataForView } from '../../utils/modifyDataForView';\r\nimport { types } from './types';\r\n\r\nexport const authActions = Object.freeze({\r\n   startFetching() {\r\n      return {\r\n         type: types.AUTH_START_FETCHING\r\n      }\r\n   },\r\n   stopFetching() {\r\n      return {\r\n         type: types.AUTH_STOP_FETCHING\r\n      }\r\n   },\r\n   openModal() {\r\n      return {\r\n         type: types.AUTH_OPEN_MODAL\r\n      }\r\n   },\r\n   closeModal() {\r\n      return {\r\n         type: types.AUTH_CLOSE_MODAL\r\n      }\r\n   },\r\n   setAuthorized(isAuth) {\r\n      return {\r\n         type: types.AUTH_SET_AUTHORIZED,\r\n         payload: isAuth,\r\n      }\r\n   },\r\n   //Async\r\n   fetchPersonalData: (seedKey) => async dispatch => {\r\n      dispatch(authActions.startFetching());\r\n      try {\r\n         const response = await fetch(`https://randomuser.me/api/?seed=${seedKey}`);\r\n         const personalData = await response.json()\r\n         dispatch({ type: types.AUTH_FETCH_DATA, payload: modifyDataForView(personalData.results)[0] });\r\n      } catch (error) {\r\n         notification.error({\r\n            message: error.message,\r\n            title: 'Please, tyr again later',\r\n         })\r\n      } finally {\r\n         dispatch(authActions.stopFetching());\r\n      }\r\n\r\n   }\r\n})","import React from \"react\";\r\nimport { Modal, Button, Form, Input, Row, Col } from 'antd';\r\nimport { CloseOutlined, UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authActions } from '../../../store/auth/auth';\r\n\r\nconst View = () => {\r\n\r\n   const history = useNavigate();\r\n   const dispatch = useDispatch();\r\n   const isModalOpen = useSelector(state => state.auth.isModalOpen);\r\n\r\n   const hideModal = () => dispatch(authActions.closeModal());\r\n\r\n   const passwordValidate = password => {\r\n      if (/[^\\w.-]/gi.test(password)) {\r\n         return Promise.reject(new Error('The password format is invalid.'));\r\n      }\r\n      if (password && password.length < 8) {\r\n         return Promise.reject(new Error('The password must be at least 8 characters.'));\r\n      }\r\n      return Promise.resolve();\r\n   }\r\n\r\n   const handleSubmit = formData => {\r\n      localStorage.setItem('auth', JSON.stringify({ profileSeedKey: formData.email }));\r\n      dispatch(authActions.setAuthorized(true));\r\n      dispatch(authActions.closeModal());\r\n      dispatch(authActions.fetchPersonalData(formData.email));\r\n      history('/profile');\r\n   }\r\n\r\n   return (\r\n      <Modal\r\n         title={'Sign In'}\r\n         visible={isModalOpen}\r\n         centered={true}\r\n         closable={false}\r\n         onCancel={hideModal}\r\n         footer={null}\r\n      >\r\n         <Form onFinish={handleSubmit}>\r\n            <Form.Item name={'email'}\r\n               rules={[\r\n                  { type: 'email', message: 'The email format is invalid.' },\r\n                  { required: true, message: 'The email field is required.' }\r\n               ]}\r\n               hasFeedback\r\n            >\r\n               <Input placeholder={'Email'} size={'large'} prefix={<UserOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item name={'password'}\r\n               rules={[\r\n                  { required: true, message: 'The password field is required.' },\r\n                  { validator: (_, password) => passwordValidate(password), }\r\n               ]}\r\n               hasFeedback\r\n            >\r\n               <Input.Password\r\n                  placeholder={'Password'}\r\n                  size={'large'}\r\n                  prefix={<LockOutlined />}\r\n\r\n               />\r\n            </Form.Item>\r\n            <Form.Item className={'_m-none'}>\r\n               <Row>\r\n                  <Col flex=\"1 1 auto\">\r\n                     <Button\r\n                        type=\"primary\"\r\n                        htmlType={'submit'}\r\n                        size={'large'}\r\n                        className={'_full_width'}\r\n                     > Sign in</Button>\r\n                  </Col>\r\n                  <Col>\r\n                     <Button\r\n                        type={'link'}\r\n                        htmlType={'button'}\r\n                        icon={<CloseOutlined />}\r\n                        danger\r\n                        onClick={hideModal}\r\n                     >Cancel</Button>\r\n                  </Col>\r\n               </Row>\r\n            </Form.Item>\r\n         </Form>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Logo } from '../logo';\r\nimport { Row, Col, Button, Dropdown, Menu, Typography, Avatar, Spin, notification } from 'antd';\r\nimport { LoginOutlined, DownOutlined, UserOutlined, LogoutOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { NavBar } from '../navbar';\r\nimport { Modal } from '../modal';\r\nimport './style.scss';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authActions } from '../../../store/auth/auth';\r\n\r\nconst View = () => {\r\n\r\n   const history = useNavigate();\r\n   const dispatch = useDispatch();\r\n   const { isAuthorized, isLoading } = useSelector(state => state.auth);\r\n   const { fullName, avatar } = useSelector(state => state.auth.personalInformation)\r\n\r\n   const showModal = () => dispatch(authActions.openModal());\r\n\r\n   const handleLogOut = () => {\r\n      localStorage.removeItem('auth');\r\n      dispatch(authActions.setAuthorized(false));\r\n      history('/');\r\n      notification.success({\r\n         message: 'Successfully logged out'\r\n      })\r\n   }\r\n\r\n   const handleGoToProfile = () => {\r\n      history('/profile');\r\n   }\r\n\r\n   const menu = (\r\n      <Menu className={'dropdown__menu'}>\r\n         <Menu.Item key={'profile'} onClick={handleGoToProfile}>\r\n            <UserOutlined className={'dropdown__icon'} />\r\n            Profile\r\n         </Menu.Item>\r\n         <Menu.Divider className={'_m-none'} />\r\n         <Menu.Item key={'logout'} onClick={handleLogOut}>\r\n            <LogoutOutlined className={'dropdown__icon'} />\r\n            Logout\r\n         </Menu.Item>\r\n      </Menu>)\r\n\r\n\r\n   const button = isAuthorized ?\r\n      (<Dropdown overlay={menu} className={'dropdown'}>\r\n         {isLoading ?\r\n            <Spin indicator={<LoadingOutlined spin className={'dropdown__spin'} />} /> :\r\n            <Row align={'middle'} gutter={8} className={'_cursor_pointer'}>\r\n               <Col>\r\n                  <Typography.Text type={'secondary'} className={'dropdown__title'}>\r\n                     Hello! {fullName.fullName} <DownOutlined />\r\n                  </Typography.Text>\r\n               </Col>\r\n               <Col>\r\n                  <Avatar src={avatar.url} size={48} />\r\n               </Col>\r\n            </Row>\r\n         }\r\n      </Dropdown>)\r\n      : (<Button\r\n         type={'link'}\r\n         htmlType={'button'}\r\n         icon={<LoginOutlined />}\r\n         onClick={showModal}\r\n      >\r\n         Sign In\r\n      </Button>)\r\n\r\n   return (\r\n      <div className=\"header\">\r\n         <Modal />\r\n         <Row align={'middle'}>\r\n            <Col className={'header__logo'}>\r\n               <Logo />\r\n            </Col>\r\n            <Col className={'_flex-grow'}>\r\n               <Row align={'middle'}>\r\n                  <Col className={'_flex-grow'}>\r\n                     <NavBar />\r\n                  </Col>\r\n                  <Col>\r\n                     {button}\r\n                  </Col>\r\n               </Row>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","export default __webpack_public_path__ + \"static/media/backdrop.743bc5e8.jpg\";","import backdrop from '../../assets/images/backdrop.jpg';\r\n\r\nexport const style = {\r\n   content: {\r\n      backgroundImage: `url(${backdrop})`,\r\n   },\r\n};","import React, { useCallback, useEffect } from \"react\";\r\nimport { style } from \"./style\";\r\nimport { Layout } from 'antd'\r\nimport { Header } from \"../../components/app/header\";\r\nimport './style.scss';\r\nimport { authActions } from '../../store/auth/auth';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst View = React.memo(({ children }) => {\r\n\r\n   const currentYear = React.useMemo(() => new Date().getFullYear(), []);\r\n   const dispatch = useDispatch();\r\n   const history = useNavigate();\r\n\r\n   useEffect(() => {\r\n      const user = localStorage.getItem('auth');\r\n      if (user) {\r\n         const seedKey = JSON.parse(user).profileSeedKey;\r\n         dispatch(authActions.fetchPersonalData(seedKey));\r\n         dispatch(authActions.setAuthorized(true));\r\n      }\r\n   }, [dispatch])\r\n\r\n   const checkAuthorization = useCallback(() => {\r\n      const user = localStorage.getItem('auth');\r\n\r\n      if (!user) {\r\n\r\n         history('/');\r\n         dispatch(authActions.setAuthorized(false));\r\n         return;\r\n      }\r\n      const seedKey = JSON.parse(user).profileSeedKey;\r\n\r\n      dispatch(authActions.fetchPersonalData(seedKey));\r\n      dispatch(authActions.setAuthorized(true));\r\n      history('/profile');\r\n\r\n   }, [dispatch, history])\r\n\r\n   useEffect(() => {\r\n      window.addEventListener('storage', checkAuthorization);\r\n\r\n      return () => {\r\n         window.removeEventListener('storage', checkAuthorization);\r\n      }\r\n   }, [checkAuthorization])\r\n\r\n   return (\r\n      <Layout className={'layout layout--base'}>\r\n         <Layout.Header className={'layout__header'}><Header /></Layout.Header>\r\n         <Layout.Content className={'layout__content'} style={style.content}>{children}</Layout.Content>\r\n         <Layout.Footer className={'layout__footer'}>{currentYear} &copy; Wezom React-Redux Test</Layout.Footer>\r\n      </Layout>\r\n   );\r\n});\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { routes } from '../routes';\r\nimport { LayoutBase } from '../../layout';\r\nimport { PageNotFound } from \"../../pages\";\r\n\r\nconst View = () => {\r\n\r\n   return (\r\n      <LayoutBase>\r\n         <Routes >\r\n            {\r\n               Object.keys(routes).map((key) => {\r\n                  const { page: Page, ...route } = routes[key];\r\n\r\n                  return <Route\r\n                     key={route.path}\r\n                     {...route}\r\n                     element={<Page />}\r\n                  />\r\n               })\r\n            }\r\n            <Route path={'/*'} element={<PageNotFound />} />\r\n         </Routes>\r\n      </LayoutBase>\r\n   )\r\n}\r\n\r\nexport { View };","import React from 'react';\nimport { RoutesSwitch } from '../../../routes';\n\nconst View = () => {\n\n  return (\n    <RoutesSwitch />\n  );\n}\n\nexport { View };\n","import React from \"react\";\r\nimport { Typography, Row, Col } from 'antd';\r\n\r\nconst View = ({ children, information, className }) => {\r\n\r\n   return (\r\n      <Row gutter={10} wrap={false} className={className}>\r\n         <Col>\r\n            <Typography.Text copyable={{ text: information }} style={{ 'marginLeft': '-10px' }} />\r\n         </Col>\r\n         <Col>\r\n            {children}\r\n         </Col>\r\n      </Row>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const types = Object.freeze({\r\n   FILTER_SET_CONTACTS: 'FILTER_SET_CONTACTS',\r\n   FILTER_SET_SEARCH_TERM: 'FILTER_SET_SEARCH_TERM',\r\n   FILTER_SET_GENDER: 'FILTER_SET_GENDER',\r\n   FILTER_SET_NATIONALITY: 'FILTER_SET_NATIONALITY',\r\n   FILTER_SET_ISCREATOR: 'FILTER_SET_ISCREATOR',\r\n   FILTER_CLEAR: 'FILTER_CLEAR',\r\n})","import { types } from \"./types\"\r\n\r\n\r\nexport const filterActions = Object.freeze({\r\n   setFilteredContacts(contacts) {\r\n      return {\r\n         type: types.FILTER_SET_CONTACTS,\r\n         payload: contacts\r\n      }\r\n   },\r\n   setSearchTerm(searchTerm) {\r\n      return {\r\n         type: types.FILTER_SET_SEARCH_TERM,\r\n         payload: searchTerm\r\n      }\r\n   },\r\n   setGender(gender) {\r\n      return {\r\n         type: types.FILTER_SET_GENDER,\r\n         payload: gender\r\n      }\r\n   },\r\n   setNationality(nationality) {\r\n      return {\r\n         type: types.FILTER_SET_NATIONALITY,\r\n         payload: nationality\r\n      }\r\n   },\r\n   setIsCreator(isCreator) {\r\n      return {\r\n         type: types.FILTER_SET_ISCREATOR,\r\n         payload: isCreator\r\n      }\r\n   },\r\n   setClear(isClear) {\r\n      return {\r\n         type: types.FILTER_CLEAR,\r\n         payload: isClear\r\n      }\r\n   }\r\n});","import React, { useEffect, useMemo } from \"react\";\r\nimport { Form, Row, Col, Input, Select, Checkbox, Button } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { NATIONALITIES } from '../../../constants/nationalities';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterActions } from \"../../../store/filter/filter\";\r\nimport { filterContacts } from '../../../utils/filterContacts';\r\n\r\nconst View = () => {\r\n\r\n   const nationalities = useMemo(() =>\r\n      Object.values(NATIONALITIES).map(({ name }) =>\r\n         <Select.Option key={name} value={name}>\r\n            {name}\r\n         </Select.Option>\r\n      ), []);\r\n\r\n   const contacts = useSelector(state => state.contacts.contacts);\r\n   const {\r\n      searchTerm,\r\n      gender,\r\n      nationality,\r\n      isCreator,\r\n      clear,\r\n   } = useSelector(state => state.filter);\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      const resultFilterContacts = filterContacts(contacts, searchTerm, gender, nationality, isCreator);\r\n      dispatch(filterActions.setFilteredContacts(resultFilterContacts))\r\n   }, [dispatch, searchTerm, gender, nationality, isCreator, clear, contacts])\r\n\r\n   const handleSearchTermChange = event => {\r\n      dispatch(filterActions.setSearchTerm(event.target.value));\r\n      dispatch(filterActions.setClear(false))\r\n   }\r\n\r\n   const handleChangeCreator = event => {\r\n      dispatch(filterActions.setIsCreator(event.target.checked));\r\n      dispatch(filterActions.setClear(false))\r\n   }\r\n\r\n   const handleChangeGender = gender => {\r\n      dispatch(filterActions.setGender(gender));\r\n      dispatch(filterActions.setClear(false))\r\n   }\r\n\r\n   const handelChangeNationality = nationalities => {\r\n      dispatch(filterActions.setNationality(nationalities))\r\n      dispatch(filterActions.setClear(false))\r\n   }\r\n\r\n   const handleChangeClear = () => {\r\n      dispatch(filterActions.setClear(true));\r\n      dispatch(filterActions.setSearchTerm(''));\r\n      dispatch(filterActions.setIsCreator(false));\r\n      dispatch(filterActions.setGender(null));\r\n      dispatch(filterActions.setNationality([]))\r\n   }\r\n\r\n   return (\r\n      <Form>\r\n         <div className={'box'}>\r\n            <Row gutter={[12, 12]} align={'middle'} justify={'center'}>\r\n               <Col className={'_flex-grow'}>\r\n                  <Row gutter={[12, 12]} align={'middle'} justify={'center'}>\r\n                     <Col xs={24} lg={11}>\r\n                        <Input.Search\r\n                           placeholder={'Search by full name'}\r\n                           size=\"large\"\r\n                           value={searchTerm}\r\n                           onChange={handleSearchTermChange}\r\n                        />\r\n                     </Col>\r\n                     <Col xs={24} sm={10} lg={4}>\r\n                        <Select\r\n                           placeholder={'Gender'}\r\n                           size={'large'}\r\n                           className={'_full_width'}\r\n                           value={gender}\r\n                           onChange={handleChangeGender}\r\n                        >\r\n                           <Select.Option value={'male'}>\r\n                              Male\r\n                           </Select.Option>\r\n                           <Select.Option value={'female'}>\r\n                              Female\r\n                           </Select.Option>\r\n                           <Select.Option value={'ideterminate'}>\r\n                              Ideterminate\r\n                           </Select.Option>\r\n                        </Select>\r\n                     </Col>\r\n                     <Col xs={24} sm={14} lg={5}>\r\n                        <Select\r\n                           placeholder={'Nationality'}\r\n                           size={'large'}\r\n                           mode={'multiple'}\r\n                           maxTagCount={2}\r\n                           className={'_full_width'}\r\n                           value={nationality}\r\n                           onChange={handelChangeNationality}\r\n                        >\r\n                           {nationalities}\r\n                        </Select>\r\n                     </Col>\r\n                     <Col xs={24} sm={6} lg={4}>\r\n                        <Checkbox checked={isCreator} onChange={handleChangeCreator}>\r\n                           I am creator\r\n                        </Checkbox>\r\n                     </Col>\r\n                  </Row>\r\n               </Col>\r\n               <Col className={'_flex-noshrink'}>\r\n                  <Button\r\n                     disabled={clear}\r\n                     type={'link'}\r\n                     icon={<CloseOutlined />}\r\n                     onClick={handleChangeClear}\r\n                  >\r\n                     Clear\r\n                  </Button>\r\n               </Col>\r\n            </Row>\r\n         </div>\r\n      </Form>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const filterContacts = (contacts, searchTerm, gender, filterNationalities, isCreator) => {\r\n\r\n   let resultFilterContacts = [];\r\n   const filterGender = !gender ? ['male', 'female', 'indeterminate'] : [gender];\r\n\r\n   if (isCreator) {\r\n      return [];\r\n   }\r\n\r\n   resultFilterContacts = contacts.filter(({ fullName, gender, nationality }) =>\r\n      fullName.fullName.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n      filterGender.includes(gender) &&\r\n      (filterNationalities.length ? filterNationalities.includes(nationality.name) : true)\r\n\r\n   );\r\n\r\n   return resultFilterContacts;\r\n}","import React from \"react\";\r\nimport { Typography, Row, Col, Statistic, Descriptions } from 'antd';\r\nimport { getGendersCount } from '../../../utils/getGendersCount';\r\nimport { determineTheMajority } from '../../../utils/determineTheMajority';\r\nimport { getNumberOfNationalities } from '../../../utils/getNumberOfNationalities';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst View = () => {\r\n\r\n   const contacts = useSelector(state => state.filter.filteredContacts);\r\n\r\n   const gendersCount = getGendersCount(contacts);\r\n   const genderMajority = determineTheMajority(gendersCount);\r\n   const numberOfNationalities = getNumberOfNationalities(contacts);\r\n   const isLoading = useSelector(state => state.contacts.isLoading);\r\n\r\n   return (\r\n      <div className={'box'}>\r\n         <Typography.Title level={3}>\r\n            Statistic\r\n         </Typography.Title>\r\n         <Row gutter={[36, 24]}>\r\n            <Col className={'_flex-noshrink'}>\r\n               <Statistic title=\"Collection size\" value={contacts.length} loading={isLoading} />\r\n            </Col>\r\n            <Col className={'_flex-noshrink'}>\r\n               <Row>\r\n                  <Col>\r\n                     <Row gutter={16}>\r\n                        <Col>\r\n                           <Statistic title={'Males'} value={gendersCount.male} loading={isLoading} />\r\n                        </Col>\r\n                        <Col>\r\n                           <Statistic title={'Females'} value={gendersCount.female} loading={isLoading} />\r\n                        </Col>\r\n                        <Col>\r\n                           <Statistic title={'Indeterminate'} value={gendersCount.indeterminate} loading={isLoading} />\r\n                        </Col>\r\n                     </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                     <Typography.Text mark>{genderMajority}</Typography.Text>\r\n                  </Col>\r\n               </Row>\r\n            </Col>\r\n            <Col span={24}>\r\n               <Statistic\r\n                  title={'Nationalities'}\r\n                  value={numberOfNationalities}\r\n                  loading={isLoading}\r\n                  formatter={nationalities =>\r\n                     <Descriptions column={{ xs: 1, sm: 2, md: 3, lg: 4, xl: 6 }}>\r\n                        {Object.keys(nationalities).map(key =>\r\n                           <Descriptions.Item key={key} label={key} labelStyle={{ 'fontWeight': '700' }}>\r\n                              {numberOfNationalities[key]} contacts\r\n                           </Descriptions.Item>\r\n                        )}\r\n                     </Descriptions>\r\n                  }\r\n               />\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport { View };","\r\nexport const getGendersCount = contacts =>\r\n   contacts.reduce((genderCounts, contact) =>\r\n      ({ ...genderCounts, [contact.gender]: genderCounts[contact.gender] + 1 }),\r\n      { male: 0, female: 0, indeterminate: 0 })","\r\nexport const determineTheMajority = genderCounts => {\r\n\r\n   const maxGenderCount = Math.max(...Object.values(genderCounts));\r\n\r\n   if (maxGenderCount === 0) return 'No data';\r\n\r\n   switch (maxGenderCount) {\r\n      case genderCounts.male:\r\n         return 'Men predominate';\r\n      case genderCounts.female:\r\n         return 'Women predominate';\r\n      default:\r\n         return 'Indeterminate predominate';\r\n   }\r\n}","\r\nexport const getNumberOfNationalities = (contacts) =>\r\n   contacts.reduce((numberNationalities, contact) => {\r\n      const countryName = contact.location.country.replaceAll('/', '');\r\n      return { ...numberNationalities, [countryName]: numberNationalities[countryName] + 1 || 1 }\r\n   },\r\n      {})","import React from \"react\";\r\nimport { Table, Avatar, Typography, Tag } from 'antd';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { InformationString } from \"../infoLine\";\r\nimport { FilterForm } from '../filterForm';\r\nimport { Statistic } from '../statistic';\r\nimport './style.scss';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsActions } from '../../../store/contacts/contacts';\r\n\r\nconst View = () => {\r\n\r\n   const filteredContacts = useSelector(state => state.filter.filteredContacts);\r\n   const { isLoading, tablePageSize, tableCurrentPage, sortOrder } = useSelector(state => state.contacts);\r\n   const dispatch = useDispatch();\r\n\r\n   const handleChangePagination = (page, pageSize) => {\r\n      dispatch(contactsActions.setTableCurrentPage(page));\r\n      dispatch(contactsActions.setTablePageSize(pageSize));\r\n   }\r\n\r\n   const handleChangeSort = (pagination, filter, sort) => {\r\n      dispatch(contactsActions.setSortOrder(sort.order));\r\n   }\r\n\r\n   const columns = [\r\n      {\r\n         title: 'Avatar',\r\n         dataIndex: 'avatar',\r\n         key: 'avatar',\r\n         render: ({ url, userId }) => <NavLink to={`/contacts/${userId}`}>\r\n            <Avatar src={url} size={42} />\r\n         </NavLink>,\r\n         fixed: 'left',\r\n         align: 'center',\r\n         width: 80\r\n      },\r\n      {\r\n         title: 'Full Name',\r\n         dataIndex: 'fullName',\r\n         key: 'fullName',\r\n         render: ({ fullName, userId }) => <NavLink to={`/contacts/${userId}`} > {fullName}</NavLink>,\r\n         sorter: (firstContact, secondContact) =>\r\n            firstContact.fullName.fullName.localeCompare(secondContact.fullName.fullName),\r\n         align: 'left',\r\n         defaultSortOrder: sortOrder\r\n      },\r\n      {\r\n         title: 'Birthday',\r\n         dataIndex: 'birthday',\r\n         key: 'birthday',\r\n         render: birthday => <Typography.Text>\r\n            {birthday.fullFormat}<br />{birthday.age}\r\n         </Typography.Text>,\r\n         width: 250,\r\n      },\r\n      {\r\n         title: 'Email',\r\n         dataIndex: 'email',\r\n         key: 'email',\r\n         render: email => <InformationString information={email}>\r\n            <a href={`mailto:${email}`}>{email}</a>\r\n         </InformationString>,\r\n         ellipsis: true,\r\n      },\r\n      {\r\n         title: 'Phone',\r\n         dataIndex: 'phone',\r\n         key: 'phone',\r\n         render: phone => <InformationString information={phone}>\r\n            <a href={`tel:${phone}`}>{phone}</a>\r\n         </InformationString>,\r\n      },\r\n      {\r\n         title: 'Location',\r\n         dataIndex: 'location',\r\n         key: 'location',\r\n         render: location => <InformationString\r\n            information={Object.values(location).join('')}>\r\n            <Typography.Text>\r\n               <strong>{location.country}</strong>\r\n               <br />\r\n               {location.address}\r\n            </Typography.Text>\r\n         </InformationString>,\r\n         width: 250,\r\n      },\r\n      {\r\n         title: 'Nationality',\r\n         dataIndex: 'nationality',\r\n         key: 'nationality',\r\n         render: nationality => <Tag color={nationality.tagColor}>{nationality.name}</Tag>,\r\n         align: 'right',\r\n\r\n      },\r\n   ];\r\n   return (\r\n      <Table\r\n         dataSource={filteredContacts}\r\n         columns={columns}\r\n         scroll={{ x: 1200 }}\r\n         size=\"small\"\r\n         className={'table'}\r\n         title={() => <FilterForm />}\r\n         footer={() => <Statistic />}\r\n         loading={isLoading}\r\n         pagination={{\r\n            defaultPageSize: tablePageSize,\r\n            defaultCurrent: tableCurrentPage,\r\n            onChange: handleChangePagination\r\n         }}\r\n         onChange={handleChangeSort}\r\n      />\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Typography, Divider, Tag } from 'antd';\r\nimport { InformationString } from '../infoLine';\r\n\r\nconst View = ({ profileData }) => {\r\n\r\n   return (\r\n      <>\r\n         <Divider dashed className={'_m-bottom_15'} />\r\n\r\n         <InformationString information={profileData.email} className={'_m-bottom_10'}>\r\n            <a href={`mailto:${profileData.email}`}>{profileData.email}</a>\r\n         </InformationString>\r\n\r\n         <InformationString information={profileData.phone} className={'_m-bottom_10'}>\r\n            <a href={`tel:${profileData.phone}`}>{profileData.phone}</a>\r\n         </InformationString>\r\n\r\n         <InformationString\r\n            information={profileData.location.country + profileData.location.address}\r\n            className={'_m-bottom_15'}>\r\n            <Typography.Text>\r\n               <strong>{profileData.location.country}</strong>\r\n               <br />\r\n               {profileData.location.address}\r\n            </Typography.Text>\r\n         </InformationString>\r\n\r\n         <Divider dashed className={'_m-bottom_15'} />\r\n         <Tag color={profileData.nationality.tagColor}>{profileData.nationality.name}</Tag>\r\n      </>\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { List, Card } from 'antd';\r\nimport './style.scss';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FilterForm } from '../filterForm';\r\nimport { Statistic } from '../statistic';\r\nimport { ProfileInformation } from '../profileInfo';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsActions } from '../../../store/contacts/contacts';\r\n\r\nconst View = () => {\r\n\r\n   const { isLoading, tiledCurrentPage, tiledPageSize } = useSelector(state => state.contacts);\r\n   const filteredContacts = useSelector(state => state.filter.filteredContacts);\r\n   const dispatch = useDispatch();\r\n\r\n   const handleChangePagination = (page, pageSize) => {\r\n      dispatch(contactsActions.setTiledPageSize(pageSize));\r\n      dispatch(contactsActions.setTiledCurrentPage(page));\r\n   }\r\n\r\n   return (\r\n      <List\r\n         className={'list'}\r\n         grid={{\r\n            gutter: 12,\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 3,\r\n            lg: 3,\r\n            xl: 3,\r\n            xxl: 3,\r\n         }}\r\n         header={<FilterForm />}\r\n         footer={<Statistic contacts={filteredContacts} />}\r\n         dataSource={filteredContacts}\r\n         loading={isLoading}\r\n         renderItem={contact =>\r\n            <List.Item>\r\n               <Card hoverable\r\n                  className={'card-contact'}\r\n                  cover={<NavLink to={`/contacts/${contact.fullName.userId}`}>\r\n                     <img alt={contact.fullName.fullName} src={contact.avatar.url} />\r\n                  </NavLink>}\r\n               >\r\n                  <Card.Meta title={\r\n                     <>\r\n                        <NavLink to={`/contacts/${contact.fullName.userId}`}>\r\n                           {contact.fullName.fullName} {contact.birthday[1]}\r\n                        </NavLink>\r\n                     </>\r\n                  }\r\n                     description={<ProfileInformation profileData={contact} />}\r\n                  />\r\n               </Card>\r\n            </List.Item>\r\n         }\r\n         pagination={{\r\n            size: 'small',\r\n            defaultPageSize: tiledPageSize,\r\n            defaultCurrent: tiledCurrentPage,\r\n            pageSizeOptions: [6, 12, 36, 48],\r\n            onChange: handleChangePagination,\r\n         }}\r\n      />\r\n   );\r\n}\r\n\r\nexport { View };","import React from \"react\";\r\nimport { Tooltip, Button } from 'antd';\r\nimport { ReloadOutlined, UnorderedListOutlined, AppstoreOutlined } from '@ant-design/icons';\r\nimport './style.scss';\r\n\r\nconst View = ({ reloadData, setViewMode, viewMode }) => {\r\n\r\n   const tableViewButtonType = viewMode === 'tabular' ? 'primary' : 'default';\r\n   const tiledViewButtonType = viewMode === 'tiled' ? 'primary' : 'default';\r\n\r\n   const changeViewMode = (event) => {\r\n      const viewMode = event.currentTarget.value;\r\n\r\n      event.currentTarget.type = 'primary';\r\n      localStorage.setItem('view-mode', viewMode);\r\n      setViewMode(viewMode);\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Tooltip title={'Update data'}>\r\n            <Button\r\n               type=\"dashed\"\r\n               shape={'circle'}\r\n               icon={<ReloadOutlined />}\r\n               className={'reload_button'}\r\n               onClick={reloadData}\r\n            />\r\n         </Tooltip>\r\n         <Tooltip title={'Tiled view'}>\r\n            <Button\r\n               type={tiledViewButtonType}\r\n               icon={<AppstoreOutlined />}\r\n               value={'tiled'}\r\n               onClick={changeViewMode}\r\n            />\r\n         </Tooltip>\r\n         <Tooltip title={'Tabular view'}>\r\n            <Button\r\n               type={tableViewButtonType}\r\n               icon={<UnorderedListOutlined />}\r\n               value={'tabular'}\r\n               onClick={changeViewMode}\r\n            />\r\n         </Tooltip>\r\n      </>\r\n   );\r\n}\r\n\r\nexport { View };","import { types } from './types';\r\n\r\nconst intitialState = {\r\n   isModalOpen: false,\r\n   personalInformation: {},\r\n   isLoading: true,\r\n   isAuthorized: false,\r\n}\r\n\r\nconst authReducer = (state = intitialState, action) => {\r\n   switch (action.type) {\r\n      case types.AUTH_OPEN_MODAL:\r\n         return { ...state, isModalOpen: true }\r\n      case types.AUTH_CLOSE_MODAL:\r\n         return { ...state, isModalOpen: false }\r\n      case types.AUTH_SET_AUTHORIZED:\r\n         return { ...state, isAuthorized: action.payload }\r\n      case types.AUTH_FETCH_DATA:\r\n         return { ...state, personalInformation: action.payload }\r\n      case types.AUTH_START_FETCHING:\r\n         return { ...state, isLoading: true }\r\n      case types.AUTH_STOP_FETCHING:\r\n         return { ...state, isLoading: false }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport { authReducer };","import { types } from './types';\r\n\r\nconst initialState = {\r\n   contacts: [],\r\n   isLoading: true,\r\n   tableCurrentPage: 1,\r\n   tablePageSize: 10,\r\n   tiledCurrentPage: 1,\r\n   tiledPageSize: 6,\r\n   sortOrder: '',\r\n}\r\n\r\nconst contactsReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.CONTACTS_FETCH_CONTACTS:\r\n         return { ...state, contacts: action.payload }\r\n      case types.CONTACTS_START_FETCHING:\r\n         return { ...state, isLoading: true }\r\n      case types.CONTACTS_STOP_FETCHING:\r\n         return { ...state, isLoading: false }\r\n      case types.CONTACTS_SET_TABLE_CURRENT_PAGE:\r\n         return { ...state, tableCurrentPage: action.payload }\r\n      case types.CONTACTS_SET_TABLE_PAGE_SIZE:\r\n         return { ...state, tablePageSize: action.payload }\r\n      case types.CONTACTS_SET_TILED_CURRENT_PAGE:\r\n         return { ...state, tiledCurrentPage: action.payload }\r\n      case types.CONTACTS_SET_TILED_PAGE_SIZE:\r\n         return { ...state, tiledPageSize: action.payload }\r\n      case types.CONTACTS_SET_SORT_ORDER:\r\n         return { ...state, sortOrder: action.payload }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport { contactsReducer };","import { types } from \"./types\";\r\n\r\nconst initialState = {\r\n   filteredContacts: [],\r\n   searchTerm: '',\r\n   gender: null,\r\n   nationality: [],\r\n   isCreator: false,\r\n   clear: true,\r\n}\r\n\r\nexport const filterReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.FILTER_SET_CONTACTS:\r\n         return { ...state, filteredContacts: action.payload };\r\n      case types.FILTER_SET_SEARCH_TERM:\r\n         return { ...state, searchTerm: action.payload }\r\n      case types.FILTER_SET_GENDER:\r\n         return { ...state, gender: action.payload }\r\n      case types.FILTER_SET_NATIONALITY:\r\n         return { ...state, nationality: action.payload }\r\n      case types.FILTER_SET_ISCREATOR:\r\n         return { ...state, isCreator: action.payload }\r\n      case types.FILTER_CLEAR:\r\n         return { ...state, clear: action.payload }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst history = createBrowserHistory({\r\n   basename: '/wezom-contacts/'\r\n})\r\n\r\nconst myRouterMiddleware = routerMiddleware(history);\r\n\r\nconst middleware = [thunk, myRouterMiddleware];\r\n\r\nexport { middleware, history };","import { combineReducers } from 'redux'\r\nimport { authReducer } from './auth/authReducer';\r\nimport { contactsReducer } from './contacts/contactsReducer';\r\nimport { filterReducer } from './filter/filterReducer';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { history } from './middleware';\r\n\r\nexport const rootReducer = combineReducers({\r\n   router: connectRouter(history),\r\n   auth: authReducer,\r\n   contacts: contactsReducer,\r\n   filter: filterReducer,\r\n});","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport { rootReducer } from \"./rootReducer\";\r\nimport { middleware } from './middleware';\r\n\r\n\r\nconst store = createStore(rootReducer, compose(\r\n   applyMiddleware(...middleware),\r\n   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Root } from './components';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { store } from './store';\nimport { history } from './store/middleware';\nimport './assets/styles/index.scss';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <BrowserRouter history={history}>\n      <Root />\n    </BrowserRouter>\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}